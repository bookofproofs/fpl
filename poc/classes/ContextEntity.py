"""
This file was generated by the tool TatSuSAG (the TatSu syntax analyser generator)
Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
"""

from poc.classes.AuxSymbolTable import AuxSymbolTable
from poc.classes.AuxISourceAnalyser import AuxISourceAnalyser
from poc.classes.AuxInterpretation import AuxInterpretation
from poc.classes.Entity import Entity


class ContextEntity:
    @staticmethod
    def dispatch(i: AuxISourceAnalyser, parsing_info: AuxInterpretation):
        new_info = Entity(i.parse_list, parsing_info)
        if new_info.self_instance:
            node = i.touch_node()
            # adjust the node reference to the parent the number of times
            # we have an '@' token proceeding 'self' reference
            for i in range(new_info.self_instance_ats):
                node = node.parent
        else:
            # in this case, Entity is a variable, and we try to identify its declaration in the current scope
            node = AuxSymbolTable.get_variable_in_current_scope(i.touch_node(), parsing_info)
        # we set a pointer to the symbol node where the entity is declared
        new_info.symbol_node = node
        i.parse_list.append(new_info)
