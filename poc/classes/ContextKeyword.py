"""
This file was generated by the tool TatSuSAG (the TatSu syntax analyser generator)
Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
"""


from poc.classes.AuxISourceAnalyser import AuxISourceAnalyser
from poc.classes.AuxInterpretation import AuxInterpretation
from poc.classes.ContextIdentifier import ContextIdentifier


class ContextKeyword(AuxInterpretation):
    def __init__(self, i: AuxISourceAnalyser, keyword):
        super().__init__(i.ast_info, i.errors)
        self.keyword = keyword
        self.aggregate_previous_rules(i.parse_list, [keyword], self.rule_aggregator)

    def rule_aggregator(self, rule: str, parsing_info: AuxInterpretation):
        if rule == self.keyword:
            self.stop_aggregation

    @staticmethod
    def dispatch(i: AuxISourceAnalyser, parsing_info: AuxInterpretation):
        if type(i.parse_list[-1]) is ContextIdentifier \
                and i.parse_list[-1].predicate.id.startswith(parsing_info.get_cst()):
            # omit writing the keyword on the parse list since it starts a longer identiefier
            # that have been parsed already
            pass
        else:
            i.parse_list.append(parsing_info)
