"""
This file was generated by the tool TatSuSAG (the TatSu syntax analyser generator)
Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
"""


from poc.classes.AuxInterpretation import AuxInterpretation
from poc.classes.AuxRuleDependencies import AuxRuleDependencies


class CTypeWithCoord(AuxInterpretation):

    def __init__(self, parse_list: list, parsing_info: AuxInterpretation):
        self.clone(parsing_info)
        self.info = parsing_info
        self.type = None
        self.left_bound_included = True
        self.right_bound_included = True
        self.aggregate_previous_rules(parse_list,
                                      AuxRuleDependencies.dep["TypeWithCoord"], self.rule_aggregator)

    def rule_aggregator(self, rule: str, parsing_info: AuxInterpretation):
        if rule == "Type":
            self.type = parsing_info
        if rule == "LeftBound":
            self.left_bound_included = parsing_info.bound_included
        if rule == "IW":
            pass
        if rule == "RangeInSignature":
            pass
        if rule == "CoordInSignature":
            pass
        if rule == "RightBound":
            self.right_bound_included = parsing_info.bound_included

