"""
This file was generated by the tool TatSuSAG (the TatSu syntax analyser generator)
Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
"""


from poc.classes.AuxInterpretation import AuxInterpretation
from poc.classes.AuxRuleDependencies import AuxRuleDependencies


class Identifier(AuxInterpretation):

    def __init__(self, parse_list: list, parsing_info: AuxInterpretation):
        super().__init__(parsing_info.get_ast_info(), parsing_info.get_errors())
        self.info = parsing_info
        self.assignee = None
        self.indexValue = None
        # a pointer to the identifier's node in the symbol table (if it was properly declared)
        # (set in ContextIdentifier.dispatch)
        self.symbol_node = None
        self.rule = None
        self.aggregate_previous_rules(parse_list,
                                      AuxRuleDependencies.dep["Identifier"], self.rule_aggregator)

    def rule_aggregator(self, rule: str, parsing_info: AuxInterpretation):
        self.rule = rule
        if rule == "PredicateIdentifier":
            self.id = parsing_info.id
        elif rule == "IndexValue":
            raise NotImplementedError("IndexValue")
        elif rule == "Assignee":
            self.assignee = parsing_info
            self.id = parsing_info.id

