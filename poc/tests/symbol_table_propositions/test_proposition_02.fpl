TestNamespace
{
    theory
    {
        proposition AddIsUnique(op: Add)
        {
            n,m: Nat
            anotherAdd: Add
            pre:
                and
                    (
                        Equals(Add(n,0),n),
                        Equals(anotherAdd(n,0),n),
                        Equals(Add(n,Succ(m)), Succ(Add(n,m))),
                        Equals(anotherAdd(n,Succ(m)), Succ(anotherAdd(n,m)))
                    )
            con:
                all n
                (
                    all m
                    (
                        Equals(Add(n,m), anotherAdd(n,m))
                    )
                )
        }

        prop SumOfConsecutiveNumbers()
        {
            n, limit: Nat
            f: Addend
            premise:
                loop n [Nat(1)~limit]
                (
                    assert Equals(f(n),n)
                )
            conclusion:
                all n
                (
                    Equals(Sum(1,n,f),Div(Mul(n,Succ(n)),2))
                )

        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.AddIsUnique[1:Add]', id='AddIsUnique[1:Add]', reference=AuxSTProposition())
│   └── AuxSTGlobal(gid='TestNamespace.SumOfConsecutiveNumbers[]', id='SumOfConsecutiveNumbers[]', reference=AuxSTProposition())
└── AuxSTTheory(checksum='bf7bf43f6aaf0a6135db240f3281edc9', file_name='test_proposition_02.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    │   ├── AuxSTProposition(id='AddIsUnique[1:Add]', keyword='proposition', outline='proposition', zfrom='5:8:41', zto='25:9:662')
    │   │   ├── AuxSTSignature(outline='signature', zfrom='5:21:54', zto='5:40:73')
    │   │   │   └── AuxSTVarDec(id='op', outline='var_decl', type='Add', type_mod=None, type_pattern=1, zfrom='5:32:65', zto='5:39:72')
    │   │   ├── AuxSTVarSpecList(outline='specificationList')
    │   │   │   ├── AuxSTVarDec(id='n', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='7:12:96', zto='7:20:104')
    │   │   │   ├── AuxSTVarDec(id='m', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='7:12:96', zto='7:20:104')
    │   │   │   └── AuxSTVarDec(id='anotherAdd', outline='var_decl', type='Add', type_mod=None, type_pattern=1, zfrom='8:12:117', zto='8:27:132')
    │   │   ├── AuxSTPredicate(outline='pre', zfrom='9:12:145', zto='16:21:449')
    │   │   │   └── AuxSTPredicate(outline='and', zfrom='10:16:166', zto='16:21:449')
    │   │   │       ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='12:24:216', zto='12:42:234')
    │   │   │       │   ├── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='12:31:223', zto='12:39:231')
    │   │   │       │   │   ├── AuxSTVariable(id='n', outline='var', zfrom='12:35:227', zto='12:36:228')
    │   │   │       │   │   └── AuxSTPredicate(id='0', outline='extDigit', zfrom='12:37:229', zto='12:38:230')
    │   │   │       │   └── AuxSTVariable(id='n', outline='var', zfrom='12:40:232', zto='12:41:233')
    │   │   │       ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='13:24:260', zto='13:49:285')
    │   │   │       │   ├── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='13:41:277', zto='13:46:282')
    │   │   │       │   │   ├── AuxSTVariable(id='n', outline='var', zfrom='13:42:278', zto='13:43:279')
    │   │   │       │   │   └── AuxSTPredicate(id='0', outline='extDigit', zfrom='13:44:280', zto='13:45:281')
    │   │   │       │   └── AuxSTVariable(id='n', outline='var', zfrom='13:47:283', zto='13:48:284')
    │   │   │       ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='14:24:311', zto='14:62:349')
    │   │   │       │   ├── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='14:31:318', zto='14:45:332')
    │   │   │       │   │   ├── AuxSTVariable(id='n', outline='var', zfrom='14:35:322', zto='14:36:323')
    │   │   │       │   │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='14:37:324', zto='14:44:331')
    │   │   │       │   │       └── AuxSTVariable(id='m', outline='var', zfrom='14:42:329', zto='14:43:330')
    │   │   │       │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='14:47:334', zto='14:61:348')
    │   │   │       │       └── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='14:52:339', zto='14:60:347')
    │   │   │       │           ├── AuxSTVariable(id='n', outline='var', zfrom='14:56:343', zto='14:57:344')
    │   │   │       │           └── AuxSTVariable(id='m', outline='var', zfrom='14:58:345', zto='14:59:346')
    │   │   │       └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='15:24:375', zto='15:76:427')
    │   │   │           ├── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='15:41:392', zto='15:52:403')
    │   │   │           │   ├── AuxSTVariable(id='n', outline='var', zfrom='15:42:393', zto='15:43:394')
    │   │   │           │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='15:44:395', zto='15:51:402')
    │   │   │           │       └── AuxSTVariable(id='m', outline='var', zfrom='15:49:400', zto='15:50:401')
    │   │   │           └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='15:54:405', zto='15:75:426')
    │   │   │               └── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='15:69:420', zto='15:74:425')
    │   │   │                   ├── AuxSTVariable(id='n', outline='var', zfrom='15:70:421', zto='15:71:422')
    │   │   │                   └── AuxSTVariable(id='m', outline='var', zfrom='15:72:423', zto='15:73:424')
    │   │   ├── AuxSTPredicate(outline='con', zfrom='17:12:462', zto='24:17:652')
    │   │   │   └── AuxSTPredicate(bound_vars=['n'], outline='all', zfrom='20:17:524', zto='24:17:652')
    │   │   │       └── AuxSTPredicate(bound_vars=['m'], outline='all', zfrom='20:20:527', zto='23:21:634')
    │   │   │           └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='22:24:579', zto='22:57:612')
    │   │   │               ├── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='22:31:586', zto='22:39:594')
    │   │   │               │   ├── AuxSTVariable(id='n', outline='var', zfrom='22:35:590', zto='22:36:591')
    │   │   │               │   └── AuxSTVariable(id='m', outline='var', zfrom='22:37:592', zto='22:38:593')
    │   │   │               └── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='22:51:606', zto='22:56:611')
    │   │   │                   ├── AuxSTVariable(id='n', outline='var', zfrom='22:52:607', zto='22:53:608')
    │   │   │                   └── AuxSTVariable(id='m', outline='var', zfrom='22:54:609', zto='22:55:610')
    │   │   ├── AuxSTOutline(outline='corollaries')
    │   │   └── AuxSTOutline(outline='proofs')
    │   └── AuxSTProposition(id='SumOfConsecutiveNumbers[]', keyword='prop', outline='proposition', zfrom='27:8:672', zto='42:9:1051')
    │       ├── AuxSTSignature(outline='signature', zfrom='27:14:678', zto='27:38:702')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   ├── AuxSTVarDec(id='n', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='29:12:725', zto='29:25:738')
    │       │   ├── AuxSTVarDec(id='limit', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='29:12:725', zto='29:25:738')
    │       │   └── AuxSTVarDec(id='f', outline='var_decl', type='Addend', type_mod=None, type_pattern=1, zfrom='30:12:751', zto='30:21:760')
    │       ├── AuxSTPredicate(outline='pre', zfrom='31:12:773', zto='35:17:897')
    │       │   └── AuxSTStatement(outline='statement', type='loop', zfrom='32:16:798', zto='35:17:897')
    │       │       ├── AuxSTVariable(id='n', outline='var', zfrom='32:21:803', zto='32:22:804')
    │       │       ├── AuxSTRange(left_included=True, outline='range', right_included=True, zfrom='', zto='')
    │       │       │   ├── AuxSTPredicateWithArgs(id='Nat', outline='predicateWithArgs', reference=None, zfrom='32:21:803', zto='32:30:812')
    │       │       │   │   └── AuxSTPredicate(id='1', outline='extDigit', zfrom='32:28:810', zto='32:29:811')
    │       │       │   └── AuxSTVariable(id='limit', outline='var', zfrom='32:31:813', zto='32:36:818')
    │       │       └── AuxSTStatement(outline='statement', type='assert', zfrom='34:20:858', zto='34:41:879')
    │       │           └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='34:27:865', zto='34:41:879')
    │       │               ├── AuxSTPredicateWithArgs(id='f', outline='predicateWithArgs', reference=None, zfrom='34:35:873', zto='34:38:876')
    │       │               │   └── AuxSTVariable(id='n', outline='var', zfrom='34:36:874', zto='34:37:875')
    │       │               └── AuxSTVariable(id='n', outline='var', zfrom='34:39:877', zto='34:40:878')
    │       ├── AuxSTPredicate(outline='con', zfrom='36:12:910', zto='40:17:1040')
    │       │   └── AuxSTPredicate(bound_vars=['n'], outline='all', zfrom='37:16:938', zto='40:17:1040')
    │       │       └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='39:20:982', zto='39:60:1022')
    │       │           ├── AuxSTPredicateWithArgs(id='Sum', outline='predicateWithArgs', reference=None, zfrom='39:27:989', zto='39:37:999')
    │       │           │   ├── AuxSTPredicate(id='1', outline='extDigit', zfrom='39:31:993', zto='39:32:994')
    │       │           │   ├── AuxSTVariable(id='n', outline='var', zfrom='39:33:995', zto='39:34:996')
    │       │           │   └── AuxSTVariable(id='f', outline='var', zfrom='39:35:997', zto='39:36:998')
    │       │           └── AuxSTPredicateWithArgs(id='Div', outline='predicateWithArgs', reference=None, zfrom='39:38:1000', zto='39:59:1021')
    │       │               ├── AuxSTPredicateWithArgs(id='Mul', outline='predicateWithArgs', reference=None, zfrom='39:42:1004', zto='39:56:1018')
    │       │               │   ├── AuxSTVariable(id='n', outline='var', zfrom='39:46:1008', zto='39:47:1009')
    │       │               │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='39:48:1010', zto='39:55:1017')
    │       │               │       └── AuxSTVariable(id='n', outline='var', zfrom='39:53:1015', zto='39:54:1016')
    │       │               └── AuxSTPredicate(id='2', outline='extDigit', zfrom='39:57:1019', zto='39:58:1020')
    │       ├── AuxSTOutline(outline='corollaries')
    │       └── AuxSTOutline(outline='proofs')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')