TestNamespace
{
    theory
    {
        proposition AddIsUnique(op: Add)
        {
            n,m: Nat
            anotherAdd: Add
            pre:
                and
                    (
                        Equals(Add(n,0),n),
                        Equals(anotherAdd(n,0),n),
                        Equals(Add(n,Succ(m)), Succ(Add(n,m))),
                        Equals(anotherAdd(n,Succ(m)), Succ(anotherAdd(n,m)))
                    )
            con:
                all n
                (
                    all m
                    (
                        Equals(Add(n,m), anotherAdd(n,m))
                    )
                )
        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   └── AuxSTGlobal(gid='TestNamespace.AddIsUnique[1:Add]', id='AddIsUnique[1:Add]', reference=AuxSTProposition())
└── AuxSTTheory(checksum='2412cfe3241ab7dc89b6b60e87a3506d', file_name='test_proposition_01.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    │   └── AuxSTProposition(id='AddIsUnique[1:Add]', keyword='proposition', outline='proposition', zfrom='5:9:42', zto='25:9:662')
    │       ├── AuxSTSignature(outline='signature', zfrom='5:21:54', zto='5:40:73')
    │       │   └── AuxSTVarDec(id='op', outline='var_decl', type='Add', type_mod=None, type_pattern=1, zfrom='5:33:66', zto='5:39:72')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   ├── AuxSTVarDec(id='n', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='7:13:97', zto='7:20:104')
    │       │   ├── AuxSTVarDec(id='m', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='7:13:97', zto='7:20:104')
    │       │   └── AuxSTVarDec(id='anotherAdd', outline='var_decl', type='Add', type_mod=None, type_pattern=1, zfrom='8:13:118', zto='8:27:132')
    │       ├── AuxSTPredicate(outline='pre', zfrom='9:13:146', zto='16:21:449')
    │       │   └── AuxSTPredicate(outline='and', zfrom='10:17:167', zto='16:21:449')
    │       │       ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='12:25:217', zto='12:42:234')
    │       │       │   ├── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='12:32:224', zto='12:39:231')
    │       │       │   │   ├── AuxSTVariable(id='n', outline='var', zfrom='12:36:228', zto='12:36:228')
    │       │       │   │   └── AuxSTPredicate(id='0', outline='extDigit', zfrom='12:38:230', zto='12:38:230')
    │       │       │   └── AuxSTVariable(id='n', outline='var', zfrom='12:41:233', zto='12:41:233')
    │       │       ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='13:25:261', zto='13:49:285')
    │       │       │   ├── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='13:41:277', zto='13:46:282')
    │       │       │   │   ├── AuxSTVariable(id='n', outline='var', zfrom='13:43:279', zto='13:43:279')
    │       │       │   │   └── AuxSTPredicate(id='0', outline='extDigit', zfrom='13:45:281', zto='13:45:281')
    │       │       │   └── AuxSTVariable(id='n', outline='var', zfrom='13:48:284', zto='13:48:284')
    │       │       ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='14:25:312', zto='14:62:349')
    │       │       │   ├── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='14:32:319', zto='14:45:332')
    │       │       │   │   ├── AuxSTVariable(id='n', outline='var', zfrom='14:36:323', zto='14:36:323')
    │       │       │   │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='14:38:325', zto='14:44:331')
    │       │       │   │       └── AuxSTVariable(id='m', outline='var', zfrom='14:43:330', zto='14:43:330')
    │       │       │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='14:48:335', zto='14:61:348')
    │       │       │       └── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='14:53:340', zto='14:60:347')
    │       │       │           ├── AuxSTVariable(id='n', outline='var', zfrom='14:57:344', zto='14:57:344')
    │       │       │           └── AuxSTVariable(id='m', outline='var', zfrom='14:59:346', zto='14:59:346')
    │       │       └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='15:25:376', zto='15:76:427')
    │       │           ├── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='15:41:392', zto='15:52:403')
    │       │           │   ├── AuxSTVariable(id='n', outline='var', zfrom='15:43:394', zto='15:43:394')
    │       │           │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='15:45:396', zto='15:51:402')
    │       │           │       └── AuxSTVariable(id='m', outline='var', zfrom='15:50:401', zto='15:50:401')
    │       │           └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='15:55:406', zto='15:75:426')
    │       │               └── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='15:69:420', zto='15:74:425')
    │       │                   ├── AuxSTVariable(id='n', outline='var', zfrom='15:71:422', zto='15:71:422')
    │       │                   └── AuxSTVariable(id='m', outline='var', zfrom='15:73:424', zto='15:73:424')
    │       ├── AuxSTPredicate(outline='con', zfrom='17:13:463', zto='24:17:652')
    │       │   └── AuxSTPredicate(bound_vars=['n'], outline='all', zfrom='20:19:526', zto='24:17:652')
    │       │       └── AuxSTPredicate(bound_vars=['m'], outline='all', zfrom='20:21:528', zto='23:21:634')
    │       │           └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='22:25:580', zto='22:57:612')
    │       │               ├── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='22:32:587', zto='22:39:594')
    │       │               │   ├── AuxSTVariable(id='n', outline='var', zfrom='22:36:591', zto='22:36:591')
    │       │               │   └── AuxSTVariable(id='m', outline='var', zfrom='22:38:593', zto='22:38:593')
    │       │               └── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='22:51:606', zto='22:56:611')
    │       │                   ├── AuxSTVariable(id='n', outline='var', zfrom='22:53:608', zto='22:53:608')
    │       │                   └── AuxSTVariable(id='m', outline='var', zfrom='22:55:610', zto='22:55:610')
    │       ├── AuxSTOutline(outline='corollaries')
    │       └── AuxSTOutline(outline='proofs')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')