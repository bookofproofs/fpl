from poc.tests.UtilTestCase import UtilTestCase, parameterized, unittest

"""
Tests of FPL related (parser) errors.
Note: FPL parser is autogenerated through the TatSu package. Therefore, we do not test any FPL syntax errors.
However, we make a positive test to ensure that all that is allowed by the FPL syntax definition can be parsed without
errors. 
"""


class AllSyntaxTests(UtilTestCase):
    folder = "_syntax"

    @parameterized.expand([
        "test_syntax_namespace_alias_ok",
        "test_syntax_proofs_ok_01",
        "test_syntax_proofs_ok_02",
        "test_syntax_type_calls_ok_01",
        "test_syntax_type_calls_ok_02",
        "test_syntax_type_calls_ok_03",
        "test_syntax_type_calls_ok_04",
        "test_syntax_type_calls_ok_05",
        "test_syntax_type_class_inheritance",
        "test_syntax_type_in_image_of_functional_terms",
        "test_syntax_type_of_properties",
        "test_syntax_type_var_declarations_in_block",
        "test_syntax_type_var_declarations_in_signature",
    ])
    @unittest.skip("Skipping tests for performance reasons, comment this line out to include this test.")
    def test_parser(self, use_case):
        super().parser_success(AllSyntaxTests.folder + "/" + use_case)

    @parameterized.expand([
        "test_syntax_namespace_fail_alias_01",
        "test_syntax_namespace_fail_alias_02",
        "test_syntax_namespace_fail_alias_03",
        "test_syntax_type_calls_fail_01",
        "test_syntax_type_calls_fail_02",
        "test_syntax_type_calls_fail_03",
        "test_syntax_type_calls_fail_04",
        "test_syntax_type_calls_fail_05",
        "test_syntax_type_calls_fail_06",
        "test_syntax_type_calls_fail_07",
        "test_syntax_type_calls_fail_08",
        "test_syntax_type_calls_fail_09",
        "test_syntax_type_calls_fail_10",
        "test_syntax_type_calls_fail_11",
        "test_syntax_type_calls_fail_12",
        "test_syntax_type_calls_fail_13",
        "test_syntax_type_calls_fail_14",
        "test_syntax_type_calls_fail_15",
        "test_syntax_type_calls_fail_16",
        "test_syntax_type_calls_fail_17",
        "test_syntax_type_calls_fail_18",
        "test_syntax_type_calls_fail_19",
        "test_syntax_type_calls_fail_20",
        "test_syntax_type_calls_fail_21",
        "test_syntax_type_calls_fail_22",
        "test_syntax_type_calls_fail_23",
        "test_syntax_type_calls_fail_24",
        "test_syntax_type_class_inheritance_fail_001",
        "test_syntax_type_class_inheritance_fail_002",
        "test_syntax_type_class_inheritance_fail_003",
        "test_syntax_type_class_inheritance_fail_004",
        "test_syntax_type_class_inheritance_fail_005",
        "test_syntax_type_class_inheritance_fail_006",
        "test_syntax_type_class_inheritance_fail_007",
        "test_syntax_type_class_inheritance_fail_008",
        "test_syntax_type_class_inheritance_fail_009",
        "test_syntax_type_class_inheritance_fail_010",
        "test_syntax_type_class_inheritance_fail_011",
        "test_syntax_type_class_inheritance_fail_012",
        "test_syntax_type_class_inheritance_fail_013",
        "test_syntax_type_class_inheritance_fail_014",
        "test_syntax_type_class_inheritance_fail_015",
        "test_syntax_type_class_inheritance_fail_016",
        "test_syntax_type_class_inheritance_fail_017",
        "test_syntax_type_class_inheritance_fail_018",
        "test_syntax_type_class_inheritance_fail_019",
        "test_syntax_type_class_inheritance_fail_020",
        "test_syntax_type_class_inheritance_fail_021",
        "test_syntax_type_class_inheritance_fail_022",
        "test_syntax_type_class_inheritance_fail_023",
        "test_syntax_type_class_inheritance_fail_024",
        "test_syntax_type_class_inheritance_fail_025",
        "test_syntax_type_class_inheritance_fail_026",
        "test_syntax_type_class_inheritance_fail_027",
        "test_syntax_type_class_inheritance_fail_028",
        "test_syntax_type_class_inheritance_fail_029",
        "test_syntax_type_class_inheritance_fail_030",
        "test_syntax_type_class_inheritance_fail_031",
        "test_syntax_type_class_inheritance_fail_032",
        "test_syntax_type_class_inheritance_fail_033",
        "test_syntax_type_class_inheritance_fail_034",
        "test_syntax_type_class_inheritance_fail_035",
        "test_syntax_type_class_inheritance_fail_036",
        "test_syntax_type_class_inheritance_fail_037",
        "test_syntax_type_class_inheritance_fail_038",
        "test_syntax_type_class_inheritance_fail_039",
        "test_syntax_type_class_inheritance_fail_040",
        "test_syntax_type_class_inheritance_fail_041",
        "test_syntax_type_class_inheritance_fail_042",
        "test_syntax_type_class_inheritance_fail_043",
        "test_syntax_type_class_inheritance_fail_044",
        "test_syntax_type_class_inheritance_fail_045",
        "test_syntax_type_class_inheritance_fail_046",
        "test_syntax_type_class_inheritance_fail_047",
        "test_syntax_type_class_inheritance_fail_048",
        "test_syntax_type_class_inheritance_fail_049",
        "test_syntax_type_class_inheritance_fail_050",
        "test_syntax_type_class_inheritance_fail_051",
        "test_syntax_type_class_inheritance_fail_052",
        "test_syntax_type_in_image_of_functional_terms_fail_01",
        "test_syntax_type_in_image_of_functional_terms_fail_02",
        "test_syntax_type_in_image_of_functional_terms_fail_03",
        "test_syntax_type_in_image_of_functional_terms_fail_04",
        "test_syntax_type_in_image_of_functional_terms_fail_05",
        "test_syntax_type_in_image_of_functional_terms_fail_06",
        "test_syntax_type_in_image_of_functional_terms_fail_07",
        "test_syntax_type_in_image_of_functional_terms_fail_08",
        "test_syntax_type_of_properties_fail_001",
        "test_syntax_type_of_properties_fail_002",
        "test_syntax_type_of_properties_fail_003",
        "test_syntax_type_of_properties_fail_004",
        "test_syntax_type_of_properties_fail_005",
        "test_syntax_type_of_properties_fail_006",
        "test_syntax_type_of_properties_fail_007",
        "test_syntax_type_of_properties_fail_008",
        "test_syntax_type_of_properties_fail_009",
        "test_syntax_type_of_properties_fail_010",
        "test_syntax_type_of_properties_fail_011",
        "test_syntax_type_of_properties_fail_012",
        "test_syntax_type_of_properties_fail_013",
        "test_syntax_type_of_properties_fail_014",
        "test_syntax_type_of_properties_fail_015",
        "test_syntax_type_of_properties_fail_016",
        "test_syntax_type_var_declarations_in_block_fail_01",
        "test_syntax_type_var_declarations_in_block_fail_02",
        "test_syntax_type_var_declarations_in_block_fail_03",
        "test_syntax_type_var_declarations_in_block_fail_04",
        "test_syntax_type_var_declarations_in_block_fail_05",
        "test_syntax_type_var_declarations_in_block_fail_06",
        "test_syntax_type_var_declarations_in_block_fail_07",
        "test_syntax_type_var_declarations_in_block_fail_08",
        "test_syntax_type_var_declarations_in_signature_fail_001",
        "test_syntax_type_var_declarations_in_signature_fail_002",
        "test_syntax_type_var_declarations_in_signature_fail_003",
        "test_syntax_type_var_declarations_in_signature_fail_004",
        "test_syntax_type_var_declarations_in_signature_fail_005",
        "test_syntax_type_var_declarations_in_signature_fail_006",
        "test_syntax_type_var_declarations_in_signature_fail_007",
        "test_syntax_type_var_declarations_in_signature_fail_008",
        "test_syntax_type_var_declarations_in_signature_fail_009",
        "test_syntax_type_var_declarations_in_signature_fail_010",
        "test_syntax_type_var_declarations_in_signature_fail_011",
        "test_syntax_type_var_declarations_in_signature_fail_012",
        "test_syntax_type_var_declarations_in_signature_fail_013",
        "test_syntax_type_var_declarations_in_signature_fail_014",
        "test_syntax_type_var_declarations_in_signature_fail_015",
        "test_syntax_type_var_declarations_in_signature_fail_016",
        "test_syntax_type_var_declarations_in_signature_fail_017",
        "test_syntax_type_var_declarations_in_signature_fail_018",
        "test_syntax_type_var_declarations_in_signature_fail_019",
        "test_syntax_type_var_declarations_in_signature_fail_020",
        "test_syntax_type_var_declarations_in_signature_fail_021",
        "test_syntax_type_var_declarations_in_signature_fail_022",
        "test_syntax_type_var_declarations_in_signature_fail_023",
        "test_syntax_type_var_declarations_in_signature_fail_024",
        "test_syntax_type_var_declarations_in_signature_fail_025",
        "test_syntax_type_var_declarations_in_signature_fail_026",
        "test_syntax_type_var_declarations_in_signature_fail_027",
        "test_syntax_type_var_declarations_in_signature_fail_028",
        "test_syntax_type_var_declarations_in_signature_fail_029",
        "test_syntax_type_var_declarations_in_signature_fail_030",
        "test_syntax_type_var_declarations_in_signature_fail_031",
        "test_syntax_type_var_declarations_in_signature_fail_032",
        "test_syntax_type_var_declarations_in_signature_fail_033",
        "test_syntax_type_var_declarations_in_signature_fail_034",
        "test_syntax_type_var_declarations_in_signature_fail_035",
        "test_syntax_type_var_declarations_in_signature_fail_036",
        "test_syntax_type_var_declarations_in_signature_fail_037",
        "test_syntax_type_var_declarations_in_signature_fail_038",
        "test_syntax_type_var_declarations_in_signature_fail_039",
    ])
    @unittest.skip("Skipping tests for performance reasons, comment this line out to include this test.")
    def test_fail_parser(self, use_case):
        super().parser_fail(AllSyntaxTests.folder + "/" + use_case)
