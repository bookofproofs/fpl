TestNamespace
{
    theory
    {
        lem AddIsUnique(op: Add)
        {
            n,m: Nat
            anotherAdd: Add
            pre:
                and
                    (
                        Equals(Add(n,0),n),
                        Equals(anotherAdd(n,0),n),
                        Equals(Add(n,Succ(m)), Succ(Add(n,m))),
                        Equals(anotherAdd(n,Succ(m)), Succ(anotherAdd(n,m)))
                    )
            con:
                all n
                (
                    all m
                    (
                        Equals(Add(n,m), anotherAdd(n,m))
                    )
                )
        }

        lemma SumOfConsecutiveNumbers()
        {
            n, limit: Nat
            f: Addend
            premise:
                loop n [Nat(1)~limit]
                (
                    assert Equals(f(n),n)
                )
            conclusion:
                all n
                (
                    Equals(Sum(1,n,f),Div(Mul(n,Succ(n)),2))
                )

        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.AddIsUnique[1:Add]', id='AddIsUnique[1:Add]', reference=AuxSTLemma())
│   └── AuxSTGlobal(gid='TestNamespace.SumOfConsecutiveNumbers[]', id='SumOfConsecutiveNumbers[]', reference=AuxSTLemma())
└── AuxSTTheory(checksum='1ced659c880f225ebc07e82438d0341d', file_name='test_lemma_02.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    │   ├── AuxSTLemma(id='AddIsUnique[1:Add]', keyword='lem', outline='lemma', zfrom='5:9:42', zto='25:9:654')
    │   │   ├── AuxSTSignature(outline='signature', zfrom='5:13:46', zto='5:32:65')
    │   │   │   └── AuxSTVarDec(id='op', outline='var_decl', type='Add', type_mod=None, type_pattern=1, zfrom='5:25:58', zto='5:31:64')
    │   │   ├── AuxSTVarSpecList(outline='specificationList')
    │   │   │   ├── AuxSTVarDec(id='n', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='7:13:89', zto='7:20:96')
    │   │   │   ├── AuxSTVarDec(id='m', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='7:13:89', zto='7:20:96')
    │   │   │   └── AuxSTVarDec(id='anotherAdd', outline='var_decl', type='Add', type_mod=None, type_pattern=1, zfrom='8:13:110', zto='8:27:124')
    │   │   ├── AuxSTPredicate(outline='pre', zfrom='9:13:138', zto='16:21:441')
    │   │   │   └── AuxSTPredicate(outline='and', zfrom='10:17:159', zto='16:21:441')
    │   │   │       ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='12:25:209', zto='12:42:226')
    │   │   │       │   ├── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='12:32:216', zto='12:39:223')
    │   │   │       │   │   ├── AuxSTVariable(id='n', outline='var', zfrom='12:36:220', zto='12:36:220')
    │   │   │       │   │   └── AuxSTPredicate(id='0', outline='extDigit', zfrom='12:38:222', zto='12:38:222')
    │   │   │       │   └── AuxSTVariable(id='n', outline='var', zfrom='12:41:225', zto='12:41:225')
    │   │   │       ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='13:25:253', zto='13:49:277')
    │   │   │       │   ├── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='13:41:269', zto='13:46:274')
    │   │   │       │   │   ├── AuxSTVariable(id='n', outline='var', zfrom='13:43:271', zto='13:43:271')
    │   │   │       │   │   └── AuxSTPredicate(id='0', outline='extDigit', zfrom='13:45:273', zto='13:45:273')
    │   │   │       │   └── AuxSTVariable(id='n', outline='var', zfrom='13:48:276', zto='13:48:276')
    │   │   │       ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='14:25:304', zto='14:62:341')
    │   │   │       │   ├── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='14:32:311', zto='14:45:324')
    │   │   │       │   │   ├── AuxSTVariable(id='n', outline='var', zfrom='14:36:315', zto='14:36:315')
    │   │   │       │   │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='14:38:317', zto='14:44:323')
    │   │   │       │   │       └── AuxSTVariable(id='m', outline='var', zfrom='14:43:322', zto='14:43:322')
    │   │   │       │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='14:48:327', zto='14:61:340')
    │   │   │       │       └── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='14:53:332', zto='14:60:339')
    │   │   │       │           ├── AuxSTVariable(id='n', outline='var', zfrom='14:57:336', zto='14:57:336')
    │   │   │       │           └── AuxSTVariable(id='m', outline='var', zfrom='14:59:338', zto='14:59:338')
    │   │   │       └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='15:25:368', zto='15:76:419')
    │   │   │           ├── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='15:41:384', zto='15:52:395')
    │   │   │           │   ├── AuxSTVariable(id='n', outline='var', zfrom='15:43:386', zto='15:43:386')
    │   │   │           │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='15:45:388', zto='15:51:394')
    │   │   │           │       └── AuxSTVariable(id='m', outline='var', zfrom='15:50:393', zto='15:50:393')
    │   │   │           └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='15:55:398', zto='15:75:418')
    │   │   │               └── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='15:69:412', zto='15:74:417')
    │   │   │                   ├── AuxSTVariable(id='n', outline='var', zfrom='15:71:414', zto='15:71:414')
    │   │   │                   └── AuxSTVariable(id='m', outline='var', zfrom='15:73:416', zto='15:73:416')
    │   │   ├── AuxSTPredicate(outline='con', zfrom='17:13:455', zto='24:17:644')
    │   │   │   └── AuxSTPredicate(bound_vars=['n'], outline='all', zfrom='20:19:518', zto='24:17:644')
    │   │   │       └── AuxSTPredicate(bound_vars=['m'], outline='all', zfrom='20:21:520', zto='23:21:626')
    │   │   │           └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='22:25:572', zto='22:57:604')
    │   │   │               ├── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='22:32:579', zto='22:39:586')
    │   │   │               │   ├── AuxSTVariable(id='n', outline='var', zfrom='22:36:583', zto='22:36:583')
    │   │   │               │   └── AuxSTVariable(id='m', outline='var', zfrom='22:38:585', zto='22:38:585')
    │   │   │               └── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='22:51:598', zto='22:56:603')
    │   │   │                   ├── AuxSTVariable(id='n', outline='var', zfrom='22:53:600', zto='22:53:600')
    │   │   │                   └── AuxSTVariable(id='m', outline='var', zfrom='22:55:602', zto='22:55:602')
    │   │   ├── AuxSTOutline(outline='corollaries')
    │   │   └── AuxSTOutline(outline='proofs')
    │   └── AuxSTLemma(id='SumOfConsecutiveNumbers[]', keyword='lemma', outline='lemma', zfrom='27:9:665', zto='42:9:1044')
    │       ├── AuxSTSignature(outline='signature', zfrom='27:15:671', zto='27:39:695')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   ├── AuxSTVarDec(id='n', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='29:13:719', zto='29:25:731')
    │       │   ├── AuxSTVarDec(id='limit', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='29:13:719', zto='29:25:731')
    │       │   └── AuxSTVarDec(id='f', outline='var_decl', type='Addend', type_mod=None, type_pattern=1, zfrom='30:13:745', zto='30:21:753')
    │       ├── AuxSTPredicate(outline='pre', zfrom='31:13:767', zto='35:17:890')
    │       │   └── AuxSTStatement(outline='statement', type='loop', zfrom='32:17:792', zto='35:17:890')
    │       │       ├── AuxSTVariable(id='n', outline='var', zfrom='32:22:797', zto='32:22:797')
    │       │       ├── AuxSTRange(left_included=True, outline='range', right_included=True, zfrom='', zto='')
    │       │       │   ├── AuxSTPredicateWithArgs(id='Nat', outline='predicateWithArgs', reference=None, zfrom='32:23:798', zto='32:30:805')
    │       │       │   │   └── AuxSTPredicate(id='1', outline='extDigit', zfrom='32:29:804', zto='32:29:804')
    │       │       │   └── AuxSTVariable(id='limit', outline='var', zfrom='32:32:807', zto='32:36:811')
    │       │       └── AuxSTStatement(outline='statement', type='assert', zfrom='34:21:852', zto='34:41:872')
    │       │           └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='34:28:859', zto='34:41:872')
    │       │               ├── AuxSTPredicateWithArgs(id='f', outline='predicateWithArgs', reference=None, zfrom='34:35:866', zto='34:38:869')
    │       │               │   └── AuxSTVariable(id='n', outline='var', zfrom='34:37:868', zto='34:37:868')
    │       │               └── AuxSTVariable(id='n', outline='var', zfrom='34:40:871', zto='34:40:871')
    │       ├── AuxSTPredicate(outline='con', zfrom='36:13:904', zto='40:17:1033')
    │       │   └── AuxSTPredicate(bound_vars=['n'], outline='all', zfrom='37:17:932', zto='40:17:1033')
    │       │       └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='39:21:976', zto='39:60:1015')
    │       │           ├── AuxSTPredicateWithArgs(id='Sum', outline='predicateWithArgs', reference=None, zfrom='39:28:983', zto='39:37:992')
    │       │           │   ├── AuxSTPredicate(id='1', outline='extDigit', zfrom='39:32:987', zto='39:32:987')
    │       │           │   ├── AuxSTVariable(id='n', outline='var', zfrom='39:34:989', zto='39:34:989')
    │       │           │   └── AuxSTVariable(id='f', outline='var', zfrom='39:36:991', zto='39:36:991')
    │       │           └── AuxSTPredicateWithArgs(id='Div', outline='predicateWithArgs', reference=None, zfrom='39:39:994', zto='39:59:1014')
    │       │               ├── AuxSTPredicateWithArgs(id='Mul', outline='predicateWithArgs', reference=None, zfrom='39:43:998', zto='39:56:1011')
    │       │               │   ├── AuxSTVariable(id='n', outline='var', zfrom='39:47:1002', zto='39:47:1002')
    │       │               │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='39:49:1004', zto='39:55:1010')
    │       │               │       └── AuxSTVariable(id='n', outline='var', zfrom='39:54:1009', zto='39:54:1009')
    │       │               └── AuxSTPredicate(id='2', outline='extDigit', zfrom='39:58:1013', zto='39:58:1013')
    │       ├── AuxSTOutline(outline='corollaries')
    │       └── AuxSTOutline(outline='proofs')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')