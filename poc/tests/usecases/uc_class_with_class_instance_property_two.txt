TestNamespace
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myCarrierSet: tplSet
            myLength: Nat

            mandatory Set CarrierSet()
            {
                self:=myCarrierSet
            }

            optional Nat Length()
            {
                self:=myLength
            }
        }
    }
}

##############################

AnyNode(outline='root')
├── AnyNode(outline='global')
│   ├── AnyNode(gid='TestNamespace.AlgebraicStructure', inherits=AnyNode(), node=AnyNode(), outline='class', type_pattern=0, uid='AlgebraicStructure')
│   ├── AnyNode(gid='TestNamespace.AlgebraicStructure.CarrierSet[]', node=AnyNode(), outline='property', type_pattern=1, uid='CarrierSet')
│   └── AnyNode(gid='TestNamespace.AlgebraicStructure.Length[]', node=AnyNode(), outline='property', type_pattern=1, uid='Length')
└── AnyNode(namespace='TestNamespace', outline='theory', theory_name='uc_class_with_class_instance_property_two')
    ├── AnyNode(outline='uses')
    ├── AnyNode(outline='inferenceRules')
    ├── AnyNode(outline='classes')
    │   └── AnyNode(id='AlgebraicStructure', info=<AuxAstInfo.AuxAstInfo>, outline='class', type='obj', type_mod=None, type_pattern=17)
    │       ├── AnyNode(outline='variables')
    │       │   ├── AnyNode(id='myCarrierSet', info=<AuxAstInfo.AuxAstInfo>, is_signature=False, outline='var', type='tplSet', type_mod=None, type_pattern=33)
    │       │   └── AnyNode(id='myLength', info=<AuxAstInfo.AuxAstInfo>, is_signature=False, outline='var', type='Nat', type_mod=None, type_pattern=1)
    │       ├── AnyNode(outline='constructors')
    │       └── AnyNode(outline='properties')
    │           ├── AnyNode(id='CarrierSet[]', info=<AuxAstInfo.AuxAstInfo>, is_mandatory=True, outline='property', type='Set', type_mod=None, type_pattern=1)
    │           │   └── AnyNode(outline='variables')
    │           └── AnyNode(id='Length[]', info=<AuxAstInfo.AuxAstInfo>, is_mandatory=False, outline='property', type='Nat', type_mod=None, type_pattern=1)
    │               └── AnyNode(outline='variables')
    ├── AnyNode(outline='predicates')
    ├── AnyNode(outline='functionalTerms')
    ├── AnyNode(outline='axioms')
    ├── AnyNode(outline='theoremLikeStatements')
    └── AnyNode(outline='conjectures')