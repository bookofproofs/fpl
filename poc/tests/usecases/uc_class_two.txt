TestNamespace
{
    theory
    {
        class Zero: obj
        {
        }

        class Nat: Zero
        {
        }

    }
}

##############################

AnyNode(outline='root')
└── AnyNode(namespace='TestNamespace', outline='theory', theory_name='uc_class_two')
    ├── AnyNode(outline='uses')
    ├── AnyNode(outline='inferenceRules')
    ├── AnyNode(outline='classes')
    │   ├── AnyNode(id='Zero', info=<AuxAstInfo.AuxAstInfo>, outline='class', type='obj')
    │   │   ├── AnyNode(outline='variables')
    │   │   ├── AnyNode(outline='usedTypes')
    │   │   │   └── AnyNode(generic=False, id='obj', inbuilt=True, info=<AuxAstInfo.AuxAstInfo>, outline='type')
    │   │   ├── AnyNode(outline='constructors')
    │   │   └── AnyNode(outline='properties')
    │   └── AnyNode(id='Nat', info=<AuxAstInfo.AuxAstInfo>, outline='class', type='Zero')
    │       ├── AnyNode(outline='variables')
    │       ├── AnyNode(outline='usedTypes')
    │       │   └── AnyNode(generic=False, id='Zero', inbuilt=False, info=<AuxAstInfo.AuxAstInfo>, outline='type')
    │       ├── AnyNode(outline='constructors')
    │       └── AnyNode(outline='properties')
    ├── AnyNode(outline='predicates')
    ├── AnyNode(outline='functionalTerms')
    ├── AnyNode(outline='axioms')
    ├── AnyNode(outline='theoremLikeStatements')
    └── AnyNode(outline='conjectures')