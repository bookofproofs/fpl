TestNamespace
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myOps: +Composition(x: *tplSetElem)

            mandatory pred IsFinite()
            {
                true
            }
        }
    }
}

##############################

AnyNode(outline='root')
├── AnyNode(outline='global')
│   ├── AnyNode(gid='TestNamespace.AlgebraicStructure', inherits=AnyNode(), node=AnyNode(), outline='class', type_pattern=0, uid='AlgebraicStructure')
│   └── AnyNode(gid='TestNamespace.AlgebraicStructure.IsFinite[]', node=AnyNode(), outline='property', type_pattern=18, uid='IsFinite')
└── AnyNode(namespace='TestNamespace', outline='theory', theory_name='uc_class_with_pred_property_one')
    ├── AnyNode(outline='uses')
    ├── AnyNode(outline='inferenceRules')
    ├── AnyNode(outline='classes')
    │   └── AnyNode(id='AlgebraicStructure', info=<AuxAstInfo.AuxAstInfo>, outline='class', type='obj', type_mod=None, type_pattern=17)
    │       ├── AnyNode(outline='variables')
    │       │   └── AnyNode(id='myOps', info=<AuxAstInfo.AuxAstInfo>, is_signature=False, outline='var', type='Composition', type_mod='+', type_pattern=1)
    │       │       └── AnyNode(id='x', info=<AuxAstInfo.AuxAstInfo>, is_signature=False, outline='var', type='tplSetElem', type_mod='*', type_pattern=33)
    │       ├── AnyNode(outline='constructors')
    │       └── AnyNode(outline='properties')
    │           └── AnyNode(id='IsFinite[]', info=<AuxAstInfo.AuxAstInfo>, is_mandatory=True, outline='property', type='pred', type_mod=None, type_pattern=18)
    │               └── AnyNode(outline='variables')
    ├── AnyNode(outline='predicates')
    ├── AnyNode(outline='functionalTerms')
    ├── AnyNode(outline='axioms')
    ├── AnyNode(outline='theoremLikeStatements')
    └── AnyNode(outline='conjectures')