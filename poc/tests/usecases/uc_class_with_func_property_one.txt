TestNamespace
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myOps: +Composition(*tplSetElem)

            mandatory func NthOp(n: index) -> Composition(*tplSetElem)
            {
                return myOps$n
            }
        }
    }
}

##############################

AnyNode(outline='root')
└── AnyNode(namespace='TestNamespace', outline='theory', theory_name='uc_class_with_func_property_one')
    ├── AnyNode(outline='uses')
    ├── AnyNode(outline='inferenceRules')
    ├── AnyNode(outline='classes')
    │   └── AnyNode(id='AlgebraicStructure', info=<AuxAstInfo.AuxAstInfo>, outline='class', type='obj')
    │       ├── AnyNode(outline='variables')
    │       │   └── AnyNode(id='myOps', info=<AuxAstInfo.AuxAstInfo>, is_signature=False, outline='var', type='+Composition(*tplSetElem)')
    │       ├── AnyNode(outline='usedTypes')
    │       │   ├── AnyNode(generic=False, id='obj', inbuilt=True, info=<AuxAstInfo.AuxAstInfo>, outline='type')
    │       │   └── AnyNode(generic=False, id='+Composition(*tplSetElem)', inbuilt=False, info=<AuxAstInfo.AuxAstInfo>, outline='type')
    │       ├── AnyNode(outline='constructors')
    │       └── AnyNode(outline='properties')
    │           └── AnyNode(id='NthOp', info=<AuxAstInfo.AuxAstInfo>, is_mandatory=True, outline='property', overload_id=None, type='functionalTerm')
    │               ├── AnyNode(outline='image')
    │               │   └── AnyNode(id='Composition', info=<AuxAstInfo.AuxAstInfo>, outline='param1')
    │               ├── AnyNode(outline='variables')
    │               └── AnyNode(outline='usedTypes')
    ├── AnyNode(outline='predicates')
    ├── AnyNode(outline='functionalTerms')
    ├── AnyNode(outline='axioms')
    ├── AnyNode(outline='theoremLikeStatements')
    └── AnyNode(outline='conjectures')