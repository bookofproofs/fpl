TestNamespace
{
    theory
    {
        func Exp(x: SetReal) -> SetReal
        {

            mandatory pred IsContinuous()
            {
                true
            }
        }
    }
}

##############################

AnyNode(outline='root')
├── AnyNode(outline='global')
│   ├── AnyNode(gid='TestNamespace.Exp[1:SetReal[]]', node=AnyNode(), outline='functionalTerm', type_pattern=4, uid='Exp')
│   └── AnyNode(gid='TestNamespace.Exp[1:SetReal[]].IsContinuous[]', node=AnyNode(), outline='property', type_pattern=18, uid='IsContinuous')
└── AnyNode(namespace='TestNamespace', outline='theory', theory_name='uc_functional_term_with_pred_property_one')
    ├── AnyNode(outline='uses')
    ├── AnyNode(outline='inferenceRules')
    ├── AnyNode(outline='classes')
    ├── AnyNode(outline='predicates')
    ├── AnyNode(outline='functionalTerms')
    │   └── AnyNode(id='Exp[1:SetReal[]]', info=<AuxAstInfo.AuxAstInfo>, outline='functionalTerm')
    │       ├── AnyNode(outline='image')
    │       │   └── AnyNode(id='SetReal', info=<AuxAstInfo.AuxAstInfo>, outline='param')
    │       ├── AnyNode(outline='variables')
    │       │   └── AnyNode(id='x', info=<AuxAstInfo.AuxAstInfo>, is_signature=True, outline='var', type='SetReal', type_mod=None, type_pattern=1)
    │       └── AnyNode(outline='properties')
    │           └── AnyNode(id='IsContinuous[]', info=<AuxAstInfo.AuxAstInfo>, is_mandatory=True, outline='property', type='pred', type_mod=None, type_pattern=18)
    │               └── AnyNode(outline='variables')
    ├── AnyNode(outline='axioms')
    ├── AnyNode(outline='theoremLikeStatements')
    └── AnyNode(outline='conjectures')