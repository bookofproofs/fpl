import unittest
from parameterized import parameterized
from poc.classes.AuxBits import AuxBits

"""
Tests of FPL related (interpreter) errors.
Note: FPL parser is autogenerated through the TatSu package. Therefore, we do not test any FPL syntax errors.
"""


class AuxBitsTests(unittest.TestCase):

    @parameterized.expand([
        (AuxBits.isObject, AuxBits.is_object),
        (AuxBits.isInbuilt, AuxBits.in_built),
        (AuxBits.isExtension, AuxBits.is_extension),
        (AuxBits.isPredicate, AuxBits.is_predicate),
        (AuxBits.isClass, AuxBits.is_class),
        (AuxBits.isIndex, AuxBits.is_index),
        (AuxBits.isGeneric, AuxBits.is_generic),
        (AuxBits.isFunctionalTerm, AuxBits.is_functional_term),
    ])
    def test_possibilities_true(self, pattern_int: int, checking_function):
        self.assertTrue(checking_function(pattern_int))

    @parameterized.expand([
        (AuxBits.isObject | AuxBits.isInbuilt, AuxBits.is_index),
    ])
    def test_possibilities_false(self, pattern_int: int, checking_function):
        self.assertFalse(checking_function(pattern_int))
