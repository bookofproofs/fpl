TestNamespace
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myOps: +Composition(x: *tplSetElem)

            mandatory pred IsFinite()
            {
                true
            }

            opt pred IsClosed()
            {
                true
            }
        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure', id='AlgebraicStructure', reference=AuxSTClass())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure[]', id='AlgebraicStructure[]', reference=AuxSTConstructor())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.IsFinite[]', id='AlgebraicStructure.IsFinite[]', reference=AuxSTPredicateInstance())
│   └── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.IsClosed[]', id='AlgebraicStructure.IsClosed[]', reference=AuxSTPredicateInstance())
└── AuxSTTheory(checksum='927136305815ae158aaf9e6bc52074d4', file_name='test_class_11.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['obj'], def_type='class', id='AlgebraicStructure', keyword='class', outline='definition', zfrom='5:8:41', zto='19:9:309')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   └── AuxSTVarDec(id='myOps', outline='var_decl', type='Composition', type_mod='+', type_pattern=1, zfrom='8:12:94', zto='8:47:129')
    │       │       └── AuxSTVarDec(id='x', outline='var_decl', type='tplSetElem', type_mod='*', type_pattern=9, zfrom='8:32:114', zto='8:46:128')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='AlgebraicStructure[]', outline='defaultConstructor', zfrom='', zto='')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='15:13:232', zto='15:31:250')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       └── AuxSTProperties(outline='properties')
    │           ├── AuxSTPredicateInstance(def_type='predicateDeclaration', id='IsFinite[]', keyword='pred', mandatory=True, outline='property', zfrom='10:12:143', zto='13:13:217')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='10:28:159', zto='10:37:168')
    │           │   ├── AuxSTVarSpecList(outline='specificationList')
    │           │   └── AuxSTPredicate(outline='true', zfrom='12:16:199', zto='12:20:203')
    │           └── AuxSTPredicateInstance(def_type='predicateDeclaration', id='IsClosed[]', keyword='pred', mandatory=False, outline='property', zfrom='15:12:231', zto='18:13:299')
    │               ├── AuxSTSignature(outline='signature', zfrom='15:22:241', zto='15:31:250')
    │               ├── AuxSTVarSpecList(outline='specificationList')
    │               └── AuxSTPredicate(outline='true', zfrom='17:16:281', zto='17:20:285')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')