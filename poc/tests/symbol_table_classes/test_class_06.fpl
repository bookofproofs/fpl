TestNamespace
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myCarrierSet: tplSet
            myCarrierSet1: Nat
            myOps: Test

            AlgebraicStructure(x: tplSet, ops: +Composition)
            {

                a: obj
                myOps := ops
                myCarrierSet := x

                assert
                    and
                    (
                        is(tplSet,Set),
                        is(tplSetElem,Set)
                    )

                assert
                    all a
                    (
                        impl ( is(a,tplSetElem), In(a,myCarrierSet) )
                    )
            }
        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure', id='AlgebraicStructure', reference=AuxSTClass())
│   └── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure[1:tplSet,1:+Composition]', id='AlgebraicStructure[1:tplSet,1:+Composition]', reference=AuxSTConstructor())
└── AuxSTTheory(checksum='776e8b4afed6e178520dc745d99e9720', file_name='test_class_06.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['obj'], def_type='class', id='AlgebraicStructure', keyword='class', outline='definition', zfrom='5:8:41', zto='32:9:695')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   ├── AuxSTVarDec(id='myCarrierSet', outline='var_decl', type='tplSet', type_mod=None, type_pattern=9, zfrom='8:12:94', zto='8:32:114')
    │       │   ├── AuxSTVarDec(id='myCarrierSet1', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='9:12:127', zto='9:30:145')
    │       │   └── AuxSTVarDec(id='myOps', outline='var_decl', type='Test', type_mod=None, type_pattern=1, zfrom='10:12:158', zto='10:23:169')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='AlgebraicStructure[1:tplSet,1:+Composition]', outline='constructor', zfrom='', zto='')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='12:13:184', zto='12:60:231')
    │       │       │   ├── AuxSTVarDec(id='x', outline='var_decl', type='tplSet', type_mod=None, type_pattern=9, zfrom='12:31:202', zto='12:40:211')
    │       │       │   └── AuxSTVarDec(id='ops', outline='var_decl', type='Composition', type_mod='+', type_pattern=1, zfrom='12:42:213', zto='12:59:230')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       │           ├── AuxSTVarDec(id='a', outline='var_decl', type='obj', type_mod=None, type_pattern=17, zfrom='15:16:263', zto='15:22:269')
    │       │           ├── AuxSTStatement(outline='statement', type=':=', zfrom='16:25:295', zto='16:28:298')
    │       │           │   ├── AuxSTVariable(id='myOps', outline='var', zfrom='16:16:286', zto='16:21:291')
    │       │           │   └── AuxSTVariable(id='ops', outline='var', zfrom='16:25:295', zto='16:28:298')
    │       │           ├── AuxSTStatement(outline='statement', type=':=', zfrom='17:32:331', zto='17:33:332')
    │       │           │   ├── AuxSTVariable(id='myCarrierSet', outline='var', zfrom='17:16:315', zto='17:28:327')
    │       │           │   └── AuxSTVariable(id='x', outline='var', zfrom='17:32:331', zto='17:33:332')
    │       │           ├── AuxSTStatement(outline='statement', type='assert', zfrom='19:16:350', zto='24:21:507')
    │       │           │   └── AuxSTPredicate(outline='and', zfrom='20:20:377', zto='24:21:507')
    │       │           │       ├── AuxSTStatement(outline='statement', type='is', zfrom='22:24:427', zto='22:38:441')
    │       │           │       │   ├── AuxSTVariable(id='tplSet', outline='var', zfrom='22:27:430', zto='22:33:436')
    │       │           │       │   └── AuxSTType(id='Set', outline='type', type_mod=None, type_pattern=1, zfrom='22:34:437', zto='15:22:269')
    │       │           │       └── AuxSTStatement(outline='statement', type='is', zfrom='23:24:467', zto='23:42:485')
    │       │           │           ├── AuxSTVariable(id='tplSetElem', outline='var', zfrom='23:27:470', zto='23:37:480')
    │       │           │           └── AuxSTType(id='Set', outline='type', type_mod=None, type_pattern=1, zfrom='23:38:481', zto='15:22:269')
    │       │           └── AuxSTStatement(outline='statement', type='assert', zfrom='26:16:525', zto='30:21:671')
    │       │               └── AuxSTPredicate(bound_vars=['a'], outline='all', zfrom='27:20:552', zto='30:21:671')
    │       │                   └── AuxSTPredicate(outline='=>', zfrom='29:24:604', zto='29:69:649')
    │       │                       ├── AuxSTStatement(outline='statement', type='is', zfrom='29:31:611', zto='29:47:627')
    │       │                       │   ├── AuxSTVariable(id='a', outline='var', zfrom='29:34:614', zto='29:35:615')
    │       │                       │   └── AuxSTType(id='tplSetElem', outline='type', type_mod=None, type_pattern=9, zfrom='29:46:626', zto='15:22:269')
    │       │                       └── AuxSTPredicateWithArgs(id='In', outline='predicateWithArgs', reference=None, zfrom='29:49:629', zto='29:67:647')
    │       │                           ├── AuxSTVariable(id='a', outline='var', zfrom='29:52:632', zto='29:53:633')
    │       │                           └── AuxSTVariable(id='myCarrierSet', outline='var', zfrom='29:54:634', zto='29:66:646')
    │       └── AuxSTProperties(outline='properties')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')