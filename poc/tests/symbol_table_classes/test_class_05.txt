TestNamespace
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myCarrierSet: tplSet
            myLength: Nat

            mandatory Set CarrierSet()
            {
                self:=myCarrierSet
            }

            optional Nat Length()
            {
                self:=myLength
            }
        }
    }
}

##############################

AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure', id='AlgebraicStructure', reference=AuxSTClass())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure[]', id='AlgebraicStructure[]', reference=AuxSTConstructor())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.CarrierSet[]', id='AlgebraicStructure.CarrierSet[]', reference=AuxSTClassInstance())
│   └── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.Length[]', id='AlgebraicStructure.Length[]', reference=AuxSTClassInstance())
├── AuxSTTheory(namespace='TestNamespace', outline='theory', theory_name='test_class_05')
│   ├── AuxSTOutline(outline='uses')
│   ├── AuxSTOutline(outline='axioms')
│   ├── AuxSTOutline(outline='inferenceRules')
│   ├── AuxSTOutline(outline='definitions')
│   │   └── AuxSTClass(class_types=['obj'], def_type='class', id='AlgebraicStructure', info=AuxAstInfo(), outline='definition')
│   │       ├── AuxSTVarSpecList(outline='specificationList')
│   │       │   ├── AuxSTVarDec(id='myCarrierSet', info=AuxAstInfo(), outline='var_dec', type='tplSet', type_mod=None, type_pattern=17)
│   │       │   └── AuxSTVarDec(id='myLength', info=AuxAstInfo(), outline='var_dec', type='Nat', type_mod=None, type_pattern=1)
│   │       ├── AuxSTConstructors(outline='constructors')
│   │       │   └── AuxSTConstructor(id='AlgebraicStructure[]', info=AuxAstInfo(), outline='defaultConstructor')
│   │       │       ├── AuxSTSignature(info=AuxAstInfo(), outline='signature')
│   │       │       └── AuxSTVarSpecList(outline='specificationList')
│   │       └── AuxSTProperties(outline='properties')
│   │           ├── AuxSTClassInstance(def_type='property', id='CarrierSet[]', info=AuxAstInfo(), outline='property')
│   │           │   ├── AuxSTType(id='Set', info=AuxAstInfo(), outline='type', type_mod=None, type_pattern=1)
│   │           │   ├── AuxSTSignature(info=AuxAstInfo(), outline='signature')
│   │           │   └── AuxSTVarSpecList(outline='specificationList')
│   │           │       └── AuxSTStatement(info=AuxAstInfo(), outline='statement', type=':=')
│   │           │           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None)
│   │           │           └── AuxSTVariable(id='myCarrierSet', info=AuxAstInfo(), outline='var')
│   │           └── AuxSTClassInstance(def_type='property', id='Length[]', info=AuxAstInfo(), outline='property')
│   │               ├── AuxSTType(id='Nat', info=AuxAstInfo(), outline='type', type_mod=None, type_pattern=1)
│   │               ├── AuxSTSignature(info=AuxAstInfo(), outline='signature')
│   │               └── AuxSTVarSpecList(outline='specificationList')
│   │                   └── AuxSTStatement(info=AuxAstInfo(), outline='statement', type=':=')
│   │                       ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None)
│   │                       └── AuxSTVariable(id='myLength', info=AuxAstInfo(), outline='var')
│   ├── AuxSTOutline(outline='theorems')
│   ├── AuxSTOutline(outline='lemmas')
│   ├── AuxSTOutline(outline='propositions')
│   ├── AuxSTOutline(outline='conjectures')
│   ├── AuxSTOutline(outline='corollaries')
│   └── AuxSTOutline(outline='proofs')
└── AuxSTLocalizations(outline='localizations')