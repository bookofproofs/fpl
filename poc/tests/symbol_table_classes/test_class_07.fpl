Fpl.Arithmetics.Natural.Peano
{
    theory
    {
        // definition of a new mathematical object (natural number)
        class Nat: obj
        {
            Nat(x: @extDecimal)
            {
                cases
                (
                    case Equals(x,0) :
                        self := Zero()
                    case Equals(x,1) :
                        self := Succ(Zero())
                    case Equals(x,2) :
                        self := Succ(Succ(Zero()))
                    else:
                        // else case addressed using a python delegate
                        self := Succ(py.decrement(x))
                )
            }

            Nat(x: Int)
            {
                cases
                (
                    case IsGreaterOrEqual(x.RightMember(), x.LeftMember()):
                        self:=Sub(x.RightMember(),x.LeftMember())
                    else:
                        self:=undefined
                )
            }
        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='Fpl.Arithmetics.Natural.Peano.Nat', id='Nat', reference=AuxSTClass())
│   ├── AuxSTGlobal(gid='Fpl.Arithmetics.Natural.Peano.Nat[1:@extDecimal]', id='Nat[1:@extDecimal]', reference=AuxSTConstructor())
│   └── AuxSTGlobal(gid='Fpl.Arithmetics.Natural.Peano.Nat[1:Int]', id='Nat[1:Int]', reference=AuxSTConstructor())
└── AuxSTTheory(checksum='18b3dcf4c7512170930d83e4853b5ad3', file_name='test_class_07.fpl', namespace='Fpl.Arithmetics.Natural.Peano', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['obj'], def_type='class', id='Nat', keyword='class', outline='definition', zfrom='6:9:126', zto='34:9:999')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   ├── AuxSTConstructor(id='Nat[1:@extDecimal]', outline='constructor', zfrom='8:13:163', zto='22:13:670')
    │       │   │   ├── AuxSTSignature(outline='signature', zfrom='8:13:163', zto='8:31:181')
    │       │   │   │   └── AuxSTVarDec(id='x', outline='var_decl', zfrom='8:17:167', zto='8:30:180')
    │       │   │   │       └── AuxSTType(id='@extDecimal', outline='type', type_mod=None, type_pattern=32, zfrom='8:19:169', zto='8:30:180')
    │       │   │   └── AuxSTVarSpecList(outline='specificationList')
    │       │   │       └── AuxSTStatement(outline='statement', type='cases', zfrom='16:21:419', zto='21:17:656')
    │       │   │           ├── AuxSTStatement(outline='statement', type='case', zfrom='12:26:262', zto='14:20:334')
    │       │   │           │   ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='12:26:262', zto='12:36:272')
    │       │   │           │   │   └── AuxSTArgs(outline='arguments', zfrom='12:32:268', zto='12:36:272')
    │       │   │           │   │       ├── AuxSTVariable(id='x', outline='var', zfrom='12:33:269', zto='12:33:269')
    │       │   │           │   │       └── AuxSTPredicate(id='0', outline='extDigit', zfrom='12:35:271', zto='12:35:271')
    │       │   │           │   └── AuxSTVarSpecList(outline='specificationList')
    │       │   │           │       └── AuxSTStatement(outline='statement', type=':=', zfrom='13:25:300', zto='13:38:313')
    │       │   │           │           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='13:25:300', zto='13:28:303')
    │       │   │           │           └── AuxSTPredicateWithArgs(id='Zero', outline='predicateWithArgs', reference=None, zfrom='13:33:308', zto='13:38:313')
    │       │   │           │               └── AuxSTArgs(outline='arguments', zfrom='13:37:312', zto='13:38:313')
    │       │   │           ├── AuxSTStatement(outline='statement', type='case', zfrom='14:26:340', zto='16:20:418')
    │       │   │           │   ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='14:26:340', zto='14:36:350')
    │       │   │           │   │   └── AuxSTArgs(outline='arguments', zfrom='14:32:346', zto='14:36:350')
    │       │   │           │   │       ├── AuxSTVariable(id='x', outline='var', zfrom='14:33:347', zto='14:33:347')
    │       │   │           │   │       └── AuxSTPredicate(id='1', outline='extDigit', zfrom='14:35:349', zto='14:35:349')
    │       │   │           │   └── AuxSTVarSpecList(outline='specificationList')
    │       │   │           │       └── AuxSTStatement(outline='statement', type=':=', zfrom='15:25:378', zto='15:44:397')
    │       │   │           │           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='15:25:378', zto='15:28:381')
    │       │   │           │           └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='15:33:386', zto='15:44:397')
    │       │   │           │               └── AuxSTArgs(outline='arguments', zfrom='15:37:390', zto='15:44:397')
    │       │   │           │                   └── AuxSTPredicateWithArgs(id='Zero', outline='predicateWithArgs', reference=None, zfrom='15:38:391', zto='15:43:396')
    │       │   │           │                       └── AuxSTArgs(outline='arguments', zfrom='15:42:395', zto='15:43:396')
    │       │   │           ├── AuxSTStatement(outline='statement', type='case', zfrom='16:26:424', zto='18:20:508')
    │       │   │           │   ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='16:26:424', zto='16:36:434')
    │       │   │           │   │   └── AuxSTArgs(outline='arguments', zfrom='16:32:430', zto='16:36:434')
    │       │   │           │   │       ├── AuxSTVariable(id='x', outline='var', zfrom='16:33:431', zto='16:33:431')
    │       │   │           │   │       └── AuxSTPredicate(id='2', outline='extDigit', zfrom='16:35:433', zto='16:35:433')
    │       │   │           │   └── AuxSTVarSpecList(outline='specificationList')
    │       │   │           │       └── AuxSTStatement(outline='statement', type=':=', zfrom='17:25:462', zto='17:50:487')
    │       │   │           │           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='17:25:462', zto='17:28:465')
    │       │   │           │           └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='17:33:470', zto='17:50:487')
    │       │   │           │               └── AuxSTArgs(outline='arguments', zfrom='17:37:474', zto='17:50:487')
    │       │   │           │                   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='17:38:475', zto='17:49:486')
    │       │   │           │                       └── AuxSTArgs(outline='arguments', zfrom='17:42:479', zto='17:49:486')
    │       │   │           │                           └── AuxSTPredicateWithArgs(id='Zero', outline='predicateWithArgs', reference=None, zfrom='17:43:480', zto='17:48:485')
    │       │   │           │                               └── AuxSTArgs(outline='arguments', zfrom='17:47:484', zto='17:48:485')
    │       │   │           └── AuxSTStatement(outline='statement', type='else', zfrom='18:21:509', zto='21:16:655')
    │       │   │               └── AuxSTVarSpecList(outline='specificationList')
    │       │   │                   └── AuxSTStatement(outline='statement', type=':=', zfrom='20:51:636', zto='20:53:638')
    │       │   │                       ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='20:25:610', zto='20:28:613')
    │       │   │                       └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='20:33:618', zto='20:53:638')
    │       │   │                           └── AuxSTArgs(outline='arguments', zfrom='20:37:622', zto='20:53:638')
    │       │   │                               └── AuxSTStatement(id='decrement', outline='statement', type='py', zfrom='20:38:623', zto='20:52:637')
    │       │   │                                   └── AuxSTVariable(id='x', outline='var', zfrom='20:51:636', zto='20:51:636')
    │       │   └── AuxSTConstructor(id='Nat[1:Int]', outline='constructor', zfrom='24:13:685', zto='33:13:989')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='24:13:685', zto='24:23:695')
    │       │       │   └── AuxSTVarDec(id='x', outline='var_decl', zfrom='24:17:689', zto='24:22:694')
    │       │       │       └── AuxSTType(id='Int', outline='type', type_mod=None, type_pattern=1, zfrom='24:19:691', zto='24:22:694')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       │           └── AuxSTStatement(outline='statement', type='cases', zfrom='28:21:771', zto='32:17:975')
    │       │               ├── AuxSTStatement(outline='statement', type='case', zfrom='28:26:776', zto='30:20:912')
    │       │               │   ├── AuxSTPredicateWithArgs(id='IsGreaterOrEqual', outline='predicateWithArgs', reference=None, zfrom='28:26:776', zto='28:74:824')
    │       │               │   │   └── AuxSTArgs(outline='arguments', zfrom='28:42:792', zto='28:74:824')
    │       │               │   │       ├── AuxSTVariable(id='x', outline='var', zfrom='28:43:793', zto='28:43:793')
    │       │               │   │       │   └── AuxSTQualified(outline='qualified', zfrom='28:44:794', zto='28:44:794')
    │       │               │   │       │       └── AuxSTPredicateWithArgs(id='RightMember', outline='predicateWithArgs', reference=None, zfrom='28:45:795', zto='28:57:807')
    │       │               │   │       │           └── AuxSTArgs(outline='arguments', zfrom='28:56:806', zto='28:57:807')
    │       │               │   │       └── AuxSTVariable(id='x', outline='var', zfrom='28:60:810', zto='28:60:810')
    │       │               │   │           └── AuxSTQualified(outline='qualified', zfrom='28:61:811', zto='28:61:811')
    │       │               │   │               └── AuxSTPredicateWithArgs(id='LeftMember', outline='predicateWithArgs', reference=None, zfrom='28:62:812', zto='28:73:823')
    │       │               │   │                   └── AuxSTArgs(outline='arguments', zfrom='28:72:822', zto='28:73:823')
    │       │               │   └── AuxSTVarSpecList(outline='specificationList')
    │       │               │       └── AuxSTStatement(outline='statement', type=':=', zfrom='29:51:877', zto='29:65:891')
    │       │               │           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='29:25:851', zto='29:28:854')
    │       │               │           └── AuxSTPredicateWithArgs(id='Sub', outline='predicateWithArgs', reference=None, zfrom='29:31:857', zto='29:65:891')
    │       │               │               └── AuxSTArgs(outline='arguments', zfrom='29:34:860', zto='29:65:891')
    │       │               │                   ├── AuxSTVariable(id='x', outline='var', zfrom='29:35:861', zto='29:35:861')
    │       │               │                   │   └── AuxSTQualified(outline='qualified', zfrom='29:36:862', zto='29:36:862')
    │       │               │                   │       └── AuxSTPredicateWithArgs(id='RightMember', outline='predicateWithArgs', reference=None, zfrom='29:37:863', zto='29:49:875')
    │       │               │                   │           └── AuxSTArgs(outline='arguments', zfrom='29:48:874', zto='29:49:875')
    │       │               │                   └── AuxSTVariable(id='x', outline='var', zfrom='29:51:877', zto='29:51:877')
    │       │               │                       └── AuxSTQualified(outline='qualified', zfrom='29:52:878', zto='29:52:878')
    │       │               │                           └── AuxSTPredicateWithArgs(id='LeftMember', outline='predicateWithArgs', reference=None, zfrom='29:53:879', zto='29:64:890')
    │       │               │                               └── AuxSTArgs(outline='arguments', zfrom='29:63:889', zto='29:64:890')
    │       │               └── AuxSTStatement(outline='statement', type='else', zfrom='30:21:913', zto='32:16:974')
    │       │                   └── AuxSTVarSpecList(outline='specificationList')
    │       │                       └── AuxSTStatement(outline='statement', type=':=', zfrom='31:25:943', zto='31:39:957')
    │       │                           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='31:25:943', zto='31:28:946')
    │       │                           └── AuxSTPredicate(outline='undefined', zfrom='31:31:949', zto='31:39:957')
    │       └── AuxSTProperties(outline='properties')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')

