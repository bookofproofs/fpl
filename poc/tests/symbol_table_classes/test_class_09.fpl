TestNamespace
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myOps: +Composition(x: *tplSetElem)

            mandatory func NthOp(n: index) -> Composition(y: *tplSetElem)
            {
                return myOps$n
            }

            optional func TestProp(n: index) -> obj
            {
                return myOps$n
            }

        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure', id='AlgebraicStructure', reference=AuxSTClass())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure[]', id='AlgebraicStructure[]', reference=AuxSTConstructor())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.NthOp[1:index]', id='AlgebraicStructure.NthOp[1:index]', reference=AuxSTFunctionalTermInstance())
│   └── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.TestProp[1:index]', id='AlgebraicStructure.TestProp[1:index]', reference=AuxSTFunctionalTermInstance())
└── AuxSTTheory(checksum='7af66ef5bc61f001709331da6f6faed6', file_name='test_class_09.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['obj'], def_type='class', id='AlgebraicStructure', keyword='class', outline='definition', zfrom='5:8:41', zto='20:9:386')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   └── AuxSTVarDec(id='myOps', outline='var_decl', type='Composition', type_mod='+', type_pattern=1, zfrom='8:12:94', zto='8:47:129')
    │       │       └── AuxSTVarDec(id='x', outline='var_decl', type='tplSetElem', type_mod='*', type_pattern=9, zfrom='8:32:114', zto='8:46:128')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='AlgebraicStructure[]', outline='defaultConstructor', zfrom='', zto='')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='15:18:283', zto='15:44:309')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       └── AuxSTProperties(outline='properties')
    │           ├── AuxSTFunctionalTermInstance(def_type='functionalTerm', id='NthOp[1:index]', keyword='func', mandatory=True, outline='property', zfrom='10:12:143', zto='13:13:263')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='10:28:159', zto='10:42:173')
    │           │   │   └── AuxSTVarDec(id='n', outline='var_decl', type='index', type_mod=None, type_pattern=64, zfrom='10:33:164', zto='10:41:172')
    │           │   ├── AuxSTType(id='Composition', outline='type', type_mod=None, type_pattern=1, zfrom='10:72:203', zto='10:73:204')
    │           │   └── AuxSTVarSpecList(outline='specificationList')
    │           │       └── AuxSTStatement(outline='statement', type='return', zfrom='12:16:235', zto='12:30:249')
    │           │           └── AuxSTPredicate(outline='indexValue', zfrom='12:23:242', zto='12:30:249')
    │           │               └── AuxSTPredicate(outline='variadicVar', zfrom='12:23:242', zto='12:29:248')
    │           │                   ├── AuxSTVariable(id='myOps', outline='var', zfrom='12:23:242', zto='12:28:247')
    │           │                   └── AuxSTVariable(id='n', outline='var', zfrom='12:29:248', zto='12:30:249')
    │           └── AuxSTFunctionalTermInstance(def_type='functionalTerm', id='TestProp[1:index]', keyword='func', mandatory=False, outline='property', zfrom='15:12:277', zto='18:13:375')
    │               ├── AuxSTSignature(outline='signature', zfrom='15:27:292', zto='15:44:309')
    │               │   └── AuxSTVarDec(id='n', outline='var_decl', type='index', type_mod=None, type_pattern=64, zfrom='15:35:300', zto='15:43:308')
    │               ├── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='15:45:310', zto='15:51:316')
    │               └── AuxSTVarSpecList(outline='specificationList')
    │                   └── AuxSTStatement(outline='statement', type='return', zfrom='17:16:347', zto='17:30:361')
    │                       └── AuxSTPredicate(outline='indexValue', zfrom='17:23:354', zto='17:30:361')
    │                           └── AuxSTPredicate(outline='variadicVar', zfrom='17:23:354', zto='17:29:360')
    │                               ├── AuxSTVariable(id='myOps', outline='var', zfrom='17:23:354', zto='17:28:359')
    │                               └── AuxSTVariable(id='n', outline='var', zfrom='17:29:360', zto='17:30:361')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')