TestNamespace
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myOps: +Composition(x: *tplSetElem)

            mandatory pred IsFinite()
            {
                true
            }
        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure', id='AlgebraicStructure', reference=AuxSTClass())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure[]', id='AlgebraicStructure[]', reference=AuxSTConstructor())
│   └── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.IsFinite[]', id='AlgebraicStructure.IsFinite[]', reference=AuxSTPredicateInstance())
└── AuxSTTheory(checksum='c2fd81296eee1a1eb44ff2da7429b7d4', file_name='test_class_10.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['obj'], def_type='class', id='AlgebraicStructure', keyword='class', outline='definition', zfrom='5:9:42', zto='14:9:227')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   └── AuxSTVarDec(id='myOps', outline='var_decl', zfrom='8:13:95', zto='8:47:129')
    │       │       ├── AuxSTType(id='Composition', outline='type', type_mod='+', type_pattern=1, zfrom='8:21:103', zto='8:31:113')
    │       │       └── AuxSTVarDec(id='x', outline='var_decl', zfrom='8:33:115', zto='8:46:128')
    │       │           └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='8:47:129', zto='8:46:128')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='AlgebraicStructure[]', outline='defaultConstructor', zfrom='', zto='')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='10:21:152', zto='10:37:168')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       └── AuxSTProperties(outline='properties')
    │           └── AuxSTPredicateInstance(def_type='predicateInstance', id='IsFinite[]', keyword='pred', mandatory=True, outline='property', zfrom='10:13:144', zto='13:13:217')
    │               ├── AuxSTSignature(outline='signature', zfrom='10:28:159', zto='10:37:168')
    │               ├── AuxSTVarSpecList(outline='specificationList')
    │               └── AuxSTPredicate(outline='true', zfrom='12:17:200', zto='12:20:203')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')