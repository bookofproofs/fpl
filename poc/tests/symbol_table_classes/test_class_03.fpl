TestNamespace
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myOps1,myOps2,myOps3: +Composition(a,b,c: *tplSetElem, d,e,f: obj)
            myCarrierSet: tplSet
            myCarrierSet1: Nat

            AlgebraicStructure(x: tplSet, ops: +Composition(e: *tplSetElem))
            {

                a: obj
                myOps := ops
                myCarrierSet := x

                // Assert that all types used in the declaration of AlgebraicStructure
                // can be treated like they were sets, even if they are not derived from the type "Set" in their original
                // definition! This, means that the In predicate has a non-transitive model
                // this is comparable to implementing an interface (or comparable to multiple inheritance).
                // The interpreter only asserts the types tplSet, and tplSetElement to be sets
                assert
                    and
                    (
                        is(tplSet,Set),
                        is(tplSetElem,Set)
                    )

                assert
                    all a
                    (
                        impl ( is(a,tplSetElem), In(a,myCarrierSet) )
                    )
            }
        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure', id='AlgebraicStructure', reference=AuxSTClass())
│   └── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure[1:tplSet,1:+Composition[1:*tplSetElem]]', id='AlgebraicStructure[1:tplSet,1:+Composition[1:*tplSetElem]]', reference=AuxSTConstructor())
└── AuxSTTheory(checksum='d98d79a779064fada7ea1dc3e41f8c55', file_name='test_class_03.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['obj'], def_type='class', id='AlgebraicStructure', keyword='class', outline='definition', zfrom='5:9:42', zto='37:9:1270')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   ├── AuxSTVarDec(id='myOps1', outline='var_decl', zfrom='8:13:95', zto='8:78:160')
    │       │   │   ├── AuxSTType(id='Composition', outline='type', type_mod='+', type_pattern=1, zfrom='8:36:118', zto='8:46:128')
    │       │   │   ├── AuxSTVarDec(id='a', outline='var_decl', zfrom='8:48:130', zto='8:65:147')
    │       │   │   │   └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='8:66:148', zto='8:65:147')
    │       │   │   ├── AuxSTVarDec(id='b', outline='var_decl', zfrom='8:48:130', zto='8:65:147')
    │       │   │   │   └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='8:66:148', zto='8:65:147')
    │       │   │   ├── AuxSTVarDec(id='c', outline='var_decl', zfrom='8:48:130', zto='8:65:147')
    │       │   │   │   └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='8:66:148', zto='8:65:147')
    │       │   │   ├── AuxSTVarDec(id='d', outline='var_decl', zfrom='8:68:150', zto='8:77:159')
    │       │   │   │   └── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='8:75:157', zto='8:65:147')
    │       │   │   ├── AuxSTVarDec(id='e', outline='var_decl', zfrom='8:68:150', zto='8:77:159')
    │       │   │   │   └── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='8:75:157', zto='8:65:147')
    │       │   │   └── AuxSTVarDec(id='f', outline='var_decl', zfrom='8:68:150', zto='8:77:159')
    │       │   │       └── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='8:75:157', zto='8:65:147')
    │       │   ├── AuxSTVarDec(id='myOps2', outline='var_decl', zfrom='8:13:95', zto='8:78:160')
    │       │   │   ├── AuxSTType(id='Composition', outline='type', type_mod='+', type_pattern=1, zfrom='8:36:118', zto='8:46:128')
    │       │   │   ├── AuxSTVarDec(id='a', outline='var_decl', zfrom='8:48:130', zto='8:65:147')
    │       │   │   │   └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='8:66:148', zto='8:65:147')
    │       │   │   ├── AuxSTVarDec(id='b', outline='var_decl', zfrom='8:48:130', zto='8:65:147')
    │       │   │   │   └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='8:66:148', zto='8:65:147')
    │       │   │   ├── AuxSTVarDec(id='c', outline='var_decl', zfrom='8:48:130', zto='8:65:147')
    │       │   │   │   └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='8:66:148', zto='8:65:147')
    │       │   │   ├── AuxSTVarDec(id='d', outline='var_decl', zfrom='8:68:150', zto='8:77:159')
    │       │   │   │   └── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='8:75:157', zto='8:65:147')
    │       │   │   ├── AuxSTVarDec(id='e', outline='var_decl', zfrom='8:68:150', zto='8:77:159')
    │       │   │   │   └── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='8:75:157', zto='8:65:147')
    │       │   │   └── AuxSTVarDec(id='f', outline='var_decl', zfrom='8:68:150', zto='8:77:159')
    │       │   │       └── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='8:75:157', zto='8:65:147')
    │       │   ├── AuxSTVarDec(id='myOps3', outline='var_decl', zfrom='8:13:95', zto='8:78:160')
    │       │   │   ├── AuxSTType(id='Composition', outline='type', type_mod='+', type_pattern=1, zfrom='8:36:118', zto='8:46:128')
    │       │   │   ├── AuxSTVarDec(id='a', outline='var_decl', zfrom='8:48:130', zto='8:65:147')
    │       │   │   │   └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='8:66:148', zto='8:65:147')
    │       │   │   ├── AuxSTVarDec(id='b', outline='var_decl', zfrom='8:48:130', zto='8:65:147')
    │       │   │   │   └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='8:66:148', zto='8:65:147')
    │       │   │   ├── AuxSTVarDec(id='c', outline='var_decl', zfrom='8:48:130', zto='8:65:147')
    │       │   │   │   └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='8:66:148', zto='8:65:147')
    │       │   │   ├── AuxSTVarDec(id='d', outline='var_decl', zfrom='8:68:150', zto='8:77:159')
    │       │   │   │   └── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='8:75:157', zto='8:65:147')
    │       │   │   ├── AuxSTVarDec(id='e', outline='var_decl', zfrom='8:68:150', zto='8:77:159')
    │       │   │   │   └── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='8:75:157', zto='8:65:147')
    │       │   │   └── AuxSTVarDec(id='f', outline='var_decl', zfrom='8:68:150', zto='8:77:159')
    │       │   │       └── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='8:75:157', zto='8:65:147')
    │       │   ├── AuxSTVarDec(id='myCarrierSet', outline='var_decl', zfrom='9:13:174', zto='9:32:193')
    │       │   │   └── AuxSTType(id='tplSet', outline='type', type_mod=None, type_pattern=9, zfrom='9:33:194', zto='8:78:160')
    │       │   └── AuxSTVarDec(id='myCarrierSet1', outline='var_decl', zfrom='10:13:207', zto='10:30:224')
    │       │       └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='10:28:222', zto='9:32:193')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='AlgebraicStructure[1:tplSet,1:+Composition[1:*tplSetElem]]', outline='constructor', zfrom='', zto='')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='12:13:239', zto='12:76:302')
    │       │       │   ├── AuxSTVarDec(id='x', outline='var_decl', zfrom='12:32:258', zto='12:40:266')
    │       │       │   │   └── AuxSTType(id='tplSet', outline='type', type_mod=None, type_pattern=9, zfrom='12:41:267', zto='10:30:224')
    │       │       │   └── AuxSTVarDec(id='ops', outline='var_decl', zfrom='12:43:269', zto='12:75:301')
    │       │       │       ├── AuxSTType(id='Composition', outline='type', type_mod='+', type_pattern=1, zfrom='12:60:286', zto='12:40:266')
    │       │       │       └── AuxSTVarDec(id='e', outline='var_decl', zfrom='12:61:287', zto='12:74:300')
    │       │       │           └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='12:75:301', zto='12:40:266')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       │           ├── AuxSTVarDec(id='a', outline='var_decl', zfrom='15:17:335', zto='15:22:340')
    │       │           │   └── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='15:20:338', zto='12:75:301')
    │       │           ├── AuxSTStatement(outline='statement', type=':=', zfrom='16:26:367', zto='16:28:369')
    │       │           │   ├── AuxSTVariable(id='myOps', outline='var', zfrom='16:17:358', zto='16:21:362')
    │       │           │   └── AuxSTVariable(id='ops', outline='var', zfrom='16:26:367', zto='16:28:369')
    │       │           ├── AuxSTStatement(outline='statement', type=':=', zfrom='17:33:403', zto='17:33:403')
    │       │           │   ├── AuxSTVariable(id='myCarrierSet', outline='var', zfrom='17:17:387', zto='17:28:398')
    │       │           │   └── AuxSTVariable(id='x', outline='var', zfrom='17:33:403', zto='17:33:403')
    │       │           ├── AuxSTStatement(outline='statement', type='assert', zfrom='24:17:926', zto='29:21:1082')
    │       │           │   └── AuxSTPredicate(outline='and', zfrom='25:21:953', zto='29:21:1082')
    │       │           │       ├── AuxSTStatement(outline='statement', type='is', zfrom='27:25:1003', zto='27:38:1016')
    │       │           │       │   ├── AuxSTVariable(id='tplSet', outline='var', zfrom='27:28:1006', zto='27:33:1011')
    │       │           │       │   └── AuxSTType(id='Set', outline='type', type_mod=None, type_pattern=1, zfrom='27:35:1013', zto='15:22:340')
    │       │           │       └── AuxSTStatement(outline='statement', type='is', zfrom='28:25:1043', zto='28:42:1060')
    │       │           │           ├── AuxSTVariable(id='tplSetElem', outline='var', zfrom='28:28:1046', zto='28:37:1055')
    │       │           │           └── AuxSTType(id='Set', outline='type', type_mod=None, type_pattern=1, zfrom='28:39:1057', zto='15:22:340')
    │       │           └── AuxSTStatement(outline='statement', type='assert', zfrom='31:17:1101', zto='35:21:1246')
    │       │               └── AuxSTPredicate(bound_vars=['a'], outline='all', zfrom='32:21:1128', zto='35:21:1246')
    │       │                   └── AuxSTPredicate(outline='=>', zfrom='34:25:1180', zto='34:69:1224')
    │       │                       ├── AuxSTStatement(outline='statement', type='is', zfrom='34:32:1187', zto='34:47:1202')
    │       │                       │   ├── AuxSTVariable(id='a', outline='var', zfrom='34:35:1190', zto='34:35:1190')
    │       │                       │   └── AuxSTType(id='tplSetElem', outline='type', type_mod=None, type_pattern=9, zfrom='34:47:1202', zto='15:22:340')
    │       │                       └── AuxSTPredicateWithArgs(id='In', outline='predicateWithArgs', reference=None, zfrom='34:50:1205', zto='34:67:1222')
    │       │                           └── AuxSTArgs(outline='arguments', zfrom='34:52:1207', zto='34:67:1222')
    │       │                               ├── AuxSTVariable(id='a', outline='var', zfrom='34:53:1208', zto='34:53:1208')
    │       │                               └── AuxSTVariable(id='myCarrierSet', outline='var', zfrom='34:55:1210', zto='34:66:1221')
    │       └── AuxSTProperties(outline='properties')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')