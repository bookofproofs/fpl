TestNamespace
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myCarrierSet: tplSet

            // Every algebraic structure will have a mandatory property called CarrierSet of type Set.
            mandatory Set CarrierSet()
            {
                self:=myCarrierSet
            }


        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure', id='AlgebraicStructure', reference=AuxSTClass())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure[]', id='AlgebraicStructure[]', reference=AuxSTConstructor())
│   └── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.CarrierSet[]', id='AlgebraicStructure.CarrierSet[]', reference=AuxSTClassInstance())
└── AuxSTTheory(checksum='ab55a23193131f0ded6f9753b6bc0655', file_name='test_class_04.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['obj'], def_type='class', id='AlgebraicStructure', keyword='class', outline='definition', zfrom='5:8:41', zto='17:9:332')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   └── AuxSTVarDec(id='myCarrierSet', outline='var_decl', type='tplSet', type_mod=None, type_pattern=9, zfrom='8:12:94', zto='8:32:114')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='AlgebraicStructure[]', outline='defaultConstructor', zfrom='', zto='')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='11:16:235', zto='11:38:257')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       └── AuxSTProperties(outline='properties')
    │           └── AuxSTClassInstance(def_type='property', id='CarrierSet[]', mandatory=True, outline='property', zfrom='11:12:231', zto='14:13:320')
    │               ├── AuxSTType(id='Set', outline='type', type_mod=None, type_pattern=1, zfrom='11:22:241', zto='8:32:114')
    │               ├── AuxSTSignature(outline='signature', zfrom='11:27:246', zto='11:38:257')
    │               └── AuxSTVarSpecList(outline='specificationList')
    │                   └── AuxSTStatement(outline='statement', type=':=', zfrom='13:22:294', zto='13:34:306')
    │                       ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None)
    │                       └── AuxSTVariable(id='myCarrierSet', outline='var', zfrom='13:22:294', zto='13:34:306')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')