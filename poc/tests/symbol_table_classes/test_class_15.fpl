TestNamespace
{
    theory
    {
        class Test: obj
        {
            mand +pred(
                        a2Np,iJS,lR:index,
                        cJu,xVY:+func[
                            !OOVU(
                                is(
                                    @@@self,
                                    +Om2N4[~self[undef~false]
                                        (
                                            and(all ch(not(2))),
                                            /49g)
                                    !]
                                ))
                        ]()
                        ,f32:ind
                    ) TestProperty130() { return n }
        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.Test', id='Test', reference=AuxSTClass())
│   ├── AuxSTGlobal(gid='TestNamespace.Test[]', id='Test[]', reference=AuxSTConstructor())
│   └── AuxSTGlobal(gid='TestNamespace.Test.TestProperty130[]', id='Test.TestProperty130[]', reference=AuxSTClassInstance())
└── AuxSTTheory(checksum='7a79c7a9586054594c675030cb3f47d3', file_name='test_class_15.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['obj'], def_type='class', id='Test', keyword='class', outline='definition', zfrom='5:9:42', zto='22:9:705')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='Test[]', outline='defaultConstructor', zfrom='', zto='')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='21:9:652', zto='21:39:682')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       └── AuxSTProperties(outline='properties')
    │           └── AuxSTClassInstance(def_type='classInstance', id='TestProperty130[]', mandatory=True, outline='property', zfrom='7:13:80', zto='21:52:695')
    │               ├── AuxSTType(id='pred', outline='type', type_mod='+', type_pattern=18, zfrom='7:19:86', zto='7:22:89')
    │               │   └── AuxSTArgs(outline='arguments', zfrom='19:26:608', zto='21:21:664')
    │               │       ├── AuxSTVarDec(id='a2Np', outline='var_decl', zfrom='8:25:116', zto='8:41:132')
    │               │       │   └── AuxSTType(id='index', outline='type', type_mod=None, type_pattern=64, zfrom='7:16:83', zto='7:22:89')
    │               │       ├── AuxSTVarDec(id='iJS', outline='var_decl', zfrom='8:25:116', zto='8:41:132')
    │               │       │   └── AuxSTType(id='index', outline='type', type_mod=None, type_pattern=64, zfrom='7:16:83', zto='7:22:89')
    │               │       ├── AuxSTVarDec(id='lR', outline='var_decl', zfrom='8:25:116', zto='8:41:132')
    │               │       │   └── AuxSTType(id='index', outline='type', type_mod=None, type_pattern=64, zfrom='7:16:83', zto='7:22:89')
    │               │       ├── AuxSTVarDec(id='cJu', outline='var_decl', zfrom='9:25:159', zto='19:27:609')
    │               │       │   └── AuxSTType(id='func', outline='type', type_mod='+', type_pattern=20, zfrom='19:26:608', zto='8:41:132')
    │               │       │       ├── AuxSTCoords(outline='coordinates', zfrom='9:38:172', zto='18:34:581')
    │               │       │       │   └── AuxSTPredicateWithArgs(id='', outline='predicateWithArgs', reference=None, zfrom='10:30:203', zto='18:34:581')
    │               │       │       │       └── AuxSTArgs(outline='arguments', zfrom='10:34:207', zto='18:34:581')
    │               │       │       │           └── AuxSTStatement(outline='statement', type='is', zfrom='11:32:240', zto='18:33:580')
    │               │       │       └── AuxSTArgs(outline='arguments', zfrom='19:26:608', zto='19:27:609')
    │               │       ├── AuxSTVarDec(id='xVY', outline='var_decl', zfrom='9:25:159', zto='19:27:609')
    │               │       │   └── AuxSTType(id='func', outline='type', type_mod='+', type_pattern=20, zfrom='19:26:608', zto='8:41:132')
    │               │       │       ├── AuxSTCoords(outline='coordinates', zfrom='9:38:172', zto='18:34:581')
    │               │       │       │   └── AuxSTPredicateWithArgs(id='', outline='predicateWithArgs', reference=None, zfrom='10:30:203', zto='18:34:581')
    │               │       │       │       └── AuxSTArgs(outline='arguments', zfrom='10:34:207', zto='18:34:581')
    │               │       │       │           └── AuxSTStatement(outline='statement', type='is', zfrom='11:31:239', zto='18:33:580')
    │               │       │       └── AuxSTArgs(outline='arguments', zfrom='19:26:608', zto='19:27:609')
    │               │       └── AuxSTVarDec(id='f32', outline='var_decl', zfrom='20:26:636', zto='20:32:642')
    │               │           └── AuxSTType(id='ind', outline='type', type_mod=None, type_pattern=64, zfrom='19:29:611', zto='19:27:609')
    │               ├── AuxSTSignature(outline='signature', zfrom='21:23:666', zto='21:39:682')
    │               └── AuxSTVarSpecList(outline='specificationList')
    │                   └── AuxSTStatement(outline='statement', type='return', zfrom='21:43:686', zto='21:50:693')
    │                       └── AuxSTVariable(id='n', outline='var', zfrom='21:50:693', zto='21:50:693')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
