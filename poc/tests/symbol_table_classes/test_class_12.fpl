TestNamespace
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myOps: +Composition(x: *tplSetElem)
            myLength: Nat
            myCarrierSet: tplSet

            mandatory func NthOp(n: index) -> Composition(y: *tplSetElem)
            {
                return myOps$n
            }

            optional func TestProp(n: index) -> obj
            {
                return myOps$n
            }

            mandatory Set CarrierSet()
            {
                self:=myCarrierSet
            }

            optional Nat Length()
            {
                self:=myLength
            }

            opt pred IsFinite()
            {
                true
            }

        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure', id='AlgebraicStructure', reference=AuxSTClass())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure[]', id='AlgebraicStructure[]', reference=AuxSTConstructor())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.NthOp[1:index]', id='AlgebraicStructure.NthOp[1:index]', reference=AuxSTFunctionalTermInstance())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.TestProp[1:index]', id='AlgebraicStructure.TestProp[1:index]', reference=AuxSTFunctionalTermInstance())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.CarrierSet[]', id='AlgebraicStructure.CarrierSet[]', reference=AuxSTClassInstance())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.Length[]', id='AlgebraicStructure.Length[]', reference=AuxSTClassInstance())
│   └── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.IsFinite[]', id='AlgebraicStructure.IsFinite[]', reference=AuxSTPredicateInstance())
└── AuxSTTheory(checksum='2d481b7f616303af609e4ee23663079b', file_name='test_class_12.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['obj'], def_type='class', id='AlgebraicStructure', keyword='class', outline='definition', zfrom='5:9:42', zto='37:9:724')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   ├── AuxSTVarDec(id='myOps', outline='var_decl', zfrom='8:13:95', zto='8:47:129')
    │       │   │   └── AuxSTType(id='Composition', outline='type', type_mod='+', type_pattern=1, zfrom='8:20:102', zto='8:31:113')
    │       │   │       └── AuxSTArgs(outline='arguments', zfrom='8:32:114', zto='8:47:129')
    │       │   │           └── AuxSTVarDec(id='x', outline='var_decl', zfrom='8:33:115', zto='8:46:128')
    │       │   │               └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='8:36:118', zto='8:46:128')
    │       │   ├── AuxSTVarDec(id='myLength', outline='var_decl', zfrom='9:13:143', zto='9:25:155')
    │       │   │   └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='9:22:152', zto='9:25:155')
    │       │   └── AuxSTVarDec(id='myCarrierSet', outline='var_decl', zfrom='10:13:169', zto='10:32:188')
    │       │       └── AuxSTType(id='tplSet', outline='type', type_mod=None, type_pattern=9, zfrom='10:26:182', zto='10:32:188')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='AlgebraicStructure[]', outline='defaultConstructor', zfrom='', zto='')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='32:15:648', zto='32:31:664')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       └── AuxSTProperties(outline='properties')
    │           ├── AuxSTFunctionalTermInstance(def_type='functionalTermInstance', id='NthOp[1:index]', keyword='func', mandatory=True, outline='property', zfrom='12:13:203', zto='15:13:322')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='12:28:218', zto='12:42:232')
    │           │   │   └── AuxSTVarDec(id='n', outline='var_decl', zfrom='12:34:224', zto='12:41:231')
    │           │   │       └── AuxSTType(id='index', outline='type', type_mod=None, type_pattern=64, zfrom='12:36:226', zto='12:41:231')
    │           │   ├── AuxSTType(id='Composition', outline='type', type_mod=None, type_pattern=1, zfrom='12:46:236', zto='12:57:247')
    │           │   │   └── AuxSTArgs(outline='arguments', zfrom='12:58:248', zto='12:73:263')
    │           │   │       └── AuxSTVarDec(id='y', outline='var_decl', zfrom='12:59:249', zto='12:72:262')
    │           │   │           └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='12:62:252', zto='12:72:262')
    │           │   └── AuxSTVarSpecList(outline='specificationList')
    │           │       └── AuxSTStatement(outline='statement', type='return', zfrom='14:17:295', zto='14:30:308')
    │           │           └── AuxSTPredicate(id='myOps$n', outline='indexValue', zfrom='14:24:302', zto='14:30:308')
    │           │               └── AuxSTPredicate(id='myOps$', outline='variadicVar', zfrom='14:24:302', zto='14:29:307')
    │           │                   ├── AuxSTVariable(id='myOps', outline='var', zfrom='14:24:302', zto='14:28:306')
    │           │                   └── AuxSTVariable(id='n', outline='var', zfrom='14:30:308', zto='14:30:308')
    │           ├── AuxSTFunctionalTermInstance(def_type='functionalTermInstance', id='TestProp[1:index]', keyword='func', mandatory=False, outline='property', zfrom='17:13:337', zto='20:13:434')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='17:27:351', zto='17:44:368')
    │           │   │   └── AuxSTVarDec(id='n', outline='var_decl', zfrom='17:36:360', zto='17:43:367')
    │           │   │       └── AuxSTType(id='index', outline='type', type_mod=None, type_pattern=64, zfrom='17:38:362', zto='17:43:367')
    │           │   ├── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='17:48:372', zto='17:51:375')
    │           │   └── AuxSTVarSpecList(outline='specificationList')
    │           │       └── AuxSTStatement(outline='statement', type='return', zfrom='19:17:407', zto='19:30:420')
    │           │           └── AuxSTPredicate(id='myOps$n', outline='indexValue', zfrom='19:24:414', zto='19:30:420')
    │           │               └── AuxSTPredicate(id='myOps$', outline='variadicVar', zfrom='19:24:414', zto='19:29:419')
    │           │                   ├── AuxSTVariable(id='myOps', outline='var', zfrom='19:24:414', zto='19:28:418')
    │           │                   └── AuxSTVariable(id='n', outline='var', zfrom='19:30:420', zto='19:30:420')
    │           ├── AuxSTClassInstance(def_type='classInstance', id='CarrierSet[]', mandatory=True, outline='property', zfrom='22:13:449', zto='25:13:537')
    │           │   ├── AuxSTType(id='Set', outline='type', type_mod=None, type_pattern=1, zfrom='22:22:458', zto='22:25:461')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='22:27:463', zto='22:38:474')
    │           │   └── AuxSTVarSpecList(outline='specificationList')
    │           │       └── AuxSTStatement(outline='statement', type=':=', zfrom='24:23:512', zto='24:34:523')
    │           │           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='24:17:506', zto='24:20:509')
    │           │           └── AuxSTVariable(id='myCarrierSet', outline='var', zfrom='24:23:512', zto='24:34:523')
    │           ├── AuxSTClassInstance(def_type='classInstance', id='Length[]', mandatory=False, outline='property', zfrom='27:13:552', zto='30:13:631')
    │           │   ├── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='27:21:560', zto='27:24:563')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='27:26:565', zto='27:33:572')
    │           │   └── AuxSTVarSpecList(outline='specificationList')
    │           │       └── AuxSTStatement(outline='statement', type=':=', zfrom='29:23:610', zto='29:30:617')
    │           │           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='29:17:604', zto='29:20:607')
    │           │           └── AuxSTVariable(id='myLength', outline='var', zfrom='29:23:610', zto='29:30:617')
    │           └── AuxSTPredicateInstance(def_type='predicateInstance', id='IsFinite[]', keyword='pred', mandatory=False, outline='property', zfrom='32:13:646', zto='35:13:713')
    │               ├── AuxSTSignature(outline='signature', zfrom='32:22:655', zto='32:31:664')
    │               ├── AuxSTVarSpecList(outline='specificationList')
    │               └── AuxSTPredicate(outline='true', zfrom='34:17:696', zto='34:20:699')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
