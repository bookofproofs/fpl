TestNamespace
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myOps: +Composition(x: *tplSetElem)
            myLength: Nat
            myCarrierSet: tplSet

            mandatory func NthOp(n: index) -> Composition(y: *tplSetElem)
            {
                return myOps$n
            }

            optional func TestProp(n: index) -> obj
            {
                return myOps$n
            }

            mandatory Set CarrierSet()
            {
                self:=myCarrierSet
            }

            optional Nat Length()
            {
                self:=myLength
            }

            opt pred IsFinite()
            {
                true
            }

        }
    }
}
##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure', id='AlgebraicStructure', reference=AuxSTClass(), theory=AuxSTTheory())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure[]', id='AlgebraicStructure[]', reference=AuxSTConstructor(), theory=AuxSTTheory())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.NthOp[1:index]', id='AlgebraicStructure.NthOp[1:index]', reference=AuxSTFunctionalTermInstance(), theory=AuxSTTheory())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.TestProp[1:index]', id='AlgebraicStructure.TestProp[1:index]', reference=AuxSTFunctionalTermInstance(), theory=AuxSTTheory())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.CarrierSet[]', id='AlgebraicStructure.CarrierSet[]', reference=AuxSTClassInstance(), theory=AuxSTTheory())
│   ├── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.Length[]', id='AlgebraicStructure.Length[]', reference=AuxSTClassInstance(), theory=AuxSTTheory())
│   └── AuxSTGlobal(gid='TestNamespace.AlgebraicStructure.IsFinite[]', id='AlgebraicStructure.IsFinite[]', reference=AuxSTPredicateInstance(), theory=AuxSTTheory())
└── AuxSTTheory(checksum='2d481b7f616303af609e4ee23663079b', file_name='test_class_12.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=[], def_type='class', id='AlgebraicStructure', keyword='class', outline='definition', zfrom='5.8', zto='37.9')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   ├── AuxSTVarDec(id='myOps', outline='var_decl', zfrom='8.12', zto='8.47')
    │       │   │   └── AuxSTType(id='Composition', outline='type', type_mod='+', type_pattern=1, zfrom='8.20', zto='8.31')
    │       │   │       └── AuxSTArgs(outline='arguments', zfrom='8.32', zto='8.47')
    │       │   │           └── AuxSTVarDec(id='x', outline='var_decl', zfrom='8.32', zto='8.46')
    │       │   │               └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='8.36', zto='8.46')
    │       │   ├── AuxSTVarDec(id='myLength', outline='var_decl', zfrom='9.12', zto='9.25')
    │       │   │   └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='9.22', zto='9.25')
    │       │   └── AuxSTVarDec(id='myCarrierSet', outline='var_decl', zfrom='10.12', zto='10.32')
    │       │       └── AuxSTType(id='tplSet', outline='type', type_mod=None, type_pattern=9, zfrom='10.26', zto='10.32')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='AlgebraicStructure[]', outline='defaultConstructor', zfrom='5.8', zto='37.9')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='32.13', zto='32.31')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       └── AuxSTProperties(outline='properties')
    │           ├── AuxSTFunctionalTermInstance(def_type='functionalTermInstance', id='NthOp[1:index]', keyword='func', mandatory=True, outline='property', zfrom='12.12', zto='15.13')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='12.27', zto='12.42')
    │           │   │   └── AuxSTVarDec(id='n', outline='var_decl', zfrom='12.33', zto='12.41')
    │           │   │       └── AuxSTType(id='index', outline='type', type_mod=None, type_pattern=64, zfrom='12.36', zto='12.41')
    │           │   ├── AuxSTType(id='Composition', outline='type', type_mod=None, type_pattern=1, zfrom='12.46', zto='12.57')
    │           │   │   └── AuxSTArgs(outline='arguments', zfrom='12.58', zto='12.73')
    │           │   │       └── AuxSTVarDec(id='y', outline='var_decl', zfrom='12.58', zto='12.72')
    │           │   │           └── AuxSTType(id='tplSetElem', outline='type', type_mod='*', type_pattern=9, zfrom='12.62', zto='12.72')
    │           │   └── AuxSTVarSpecList(outline='specificationList')
    │           │       └── AuxSTStatementReturn(outline='return', zfrom='14.16', zto='14.30')
    │           │           └── AuxSTVariableVariadic(id='myOps$', outline='variadicVar', zfrom='14.23', zto='14.30')
    │           │               ├── AuxSTVariable(id='myOps', outline='var', reference=None, zfrom='14.23', zto='14.28')
    │           │               └── AuxSTVariable(id='n', outline='var', reference=None, zfrom='14.29', zto='14.30')
    │           ├── AuxSTFunctionalTermInstance(def_type='functionalTermInstance', id='TestProp[1:index]', keyword='func', mandatory=False, outline='property', zfrom='17.12', zto='20.13')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='17.26', zto='17.44')
    │           │   │   └── AuxSTVarDec(id='n', outline='var_decl', zfrom='17.35', zto='17.43')
    │           │   │       └── AuxSTType(id='index', outline='type', type_mod=None, type_pattern=64, zfrom='17.38', zto='17.43')
    │           │   ├── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='17.48', zto='17.51')
    │           │   └── AuxSTVarSpecList(outline='specificationList')
    │           │       └── AuxSTStatementReturn(outline='return', zfrom='19.16', zto='19.30')
    │           │           └── AuxSTVariableVariadic(id='myOps$', outline='variadicVar', zfrom='19.23', zto='19.30')
    │           │               ├── AuxSTVariable(id='myOps', outline='var', reference=None, zfrom='19.23', zto='19.28')
    │           │               └── AuxSTVariable(id='n', outline='var', reference=None, zfrom='19.29', zto='19.30')
    │           ├── AuxSTClassInstance(def_type='classInstance', id='CarrierSet[]', mandatory=True, outline='property', zfrom='22.12', zto='25.13')
    │           │   ├── AuxSTType(id='Set', outline='type', type_mod=None, type_pattern=1, zfrom='22.22', zto='22.25')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='22.26', zto='22.38')
    │           │   └── AuxSTVarSpecList(outline='specificationList')
    │           │       └── AuxSTStatementAssign(outline=':=', zfrom='24.22', zto='24.34')
    │           │           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='24.16', zto='24.20')
    │           │           └── AuxSTVariable(id='myCarrierSet', outline='var', reference=None, zfrom='24.22', zto='24.34')
    │           ├── AuxSTClassInstance(def_type='classInstance', id='Length[]', mandatory=False, outline='property', zfrom='27.12', zto='30.13')
    │           │   ├── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='27.21', zto='27.24')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='27.25', zto='27.33')
    │           │   └── AuxSTVarSpecList(outline='specificationList')
    │           │       └── AuxSTStatementAssign(outline=':=', zfrom='29.22', zto='29.30')
    │           │           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='29.16', zto='29.20')
    │           │           └── AuxSTVariable(id='myLength', outline='var', reference=None, zfrom='29.22', zto='29.30')
    │           └── AuxSTPredicateInstance(def_type='predicateInstance', id='IsFinite[]', keyword='pred', mandatory=False, outline='property', zfrom='32.12', zto='35.13')
    │               ├── AuxSTSignature(outline='signature', zfrom='32.21', zto='32.31')
    │               ├── AuxSTVarSpecList(outline='specificationList')
    │               └── AuxSTPredicate(outline='true', zfrom='34.16', zto='34.20')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
