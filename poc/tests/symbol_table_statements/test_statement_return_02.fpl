TestTheory
{
    theory
    {
        class CartesianProduct: Set
        {
            CartesianProduct(setList: +Set)
            {
                setItem: Set
                i: Nat
                i:= Zero()
                loop setItem setList
                (
                    i:=Succ(i)
                    self[i]:=setItem
                )
                myFrom := Nat(1)
                myLength:=i
            }

            mandatory Nat Length()
            {
                return myLength
            }
        }
    }

}
##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestTheory.CartesianProduct', id='CartesianProduct', reference=AuxSTClass(), theory=AuxSTTheory())
│   ├── AuxSTGlobal(gid='TestTheory.CartesianProduct[1:+Set]', id='CartesianProduct[1:+Set]', reference=AuxSTConstructor(), theory=AuxSTTheory())
│   └── AuxSTGlobal(gid='TestTheory.CartesianProduct.Length[]', id='CartesianProduct.Length[]', reference=AuxSTClassInstance(), theory=AuxSTTheory())
└── AuxSTTheory(checksum='85785e89182daa009ee62baddfa2388c', file_name='test_statement_return_02.fpl', namespace='TestTheory', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['Set'], def_type='class', id='CartesianProduct', keyword='class', outline='definition', zfrom='5.8', zto='25.9')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='CartesianProduct[1:+Set]', outline='constructor', zfrom='7.12', zto='19.13')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='7.12', zto='7.43')
    │       │       │   └── AuxSTVarDec(id='setList', outline='var_decl', zfrom='7.29', zto='7.42')
    │       │       │       └── AuxSTType(id='Set', outline='type', type_mod='+', type_pattern=1, zfrom='7.39', zto='7.42')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       │           ├── AuxSTVarDec(id='setItem', outline='var_decl', zfrom='9.16', zto='9.28')
    │       │           │   └── AuxSTType(id='Set', outline='type', type_mod=None, type_pattern=1, zfrom='9.25', zto='9.28')
    │       │           ├── AuxSTVarDec(id='i', outline='var_decl', zfrom='10.16', zto='10.22')
    │       │           │   └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='10.19', zto='10.22')
    │       │           ├── AuxSTStatementAssign(outline=':=', zfrom='11.16', zto='11.26')
    │       │           │   ├── AuxSTVariable(id='i', outline='var', reference=None, zfrom='11.16', zto='11.17')
    │       │           │   └── AuxSTPredicateWithArgs(id='Zero', outline='predicateWithArgs', reference=None, zfrom='11.20', zto='11.26')
    │       │           │       └── AuxSTArgs(outline='arguments', zfrom='11.25', zto='11.26')
    │       │           ├── AuxSTStatementLoop(outline='loop', zfrom='12.16', zto='16.17')
    │       │           │   ├── AuxSTVariable(id='setItem', outline='var', reference=None, zfrom='12.21', zto='12.28')
    │       │           │   ├── AuxSTRange(left_included=False, outline='range', right_included=False, zfrom='', zto='')
    │       │           │   │   └── AuxSTVariable(id='setList', outline='var', reference=None, zfrom='12.29', zto='12.36')
    │       │           │   ├── AuxSTStatementAssign(outline=':=', zfrom='14.28', zto='14.30')
    │       │           │   │   ├── AuxSTVariable(id='i', outline='var', reference=None, zfrom='14.20', zto='14.21')
    │       │           │   │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='14.23', zto='14.30')
    │       │           │   │       └── AuxSTArgs(outline='arguments', zfrom='14.28', zto='14.30')
    │       │           │   │           └── AuxSTVariable(id='i', outline='var', reference=None, zfrom='14.28', zto='14.29')
    │       │           │   └── AuxSTStatementAssign(outline=':=', zfrom='15.29', zto='15.36')
    │       │           │       ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='15.25', zto='15.27')
    │       │           │       │   └── AuxSTCoords(outline='coordinates', zfrom='15.25', zto='15.26')
    │       │           │       │       └── AuxSTVariable(id='i', outline='var', reference=None, zfrom='15.25', zto='15.26')
    │       │           │       └── AuxSTVariable(id='setItem', outline='var', reference=None, zfrom='15.29', zto='15.36')
    │       │           ├── AuxSTStatementAssign(outline=':=', zfrom='17.16', zto='17.32')
    │       │           │   ├── AuxSTVariable(id='myFrom', outline='var', reference=None, zfrom='17.16', zto='17.22')
    │       │           │   └── AuxSTPredicateWithArgs(id='Nat', outline='predicateWithArgs', reference=None, zfrom='17.26', zto='17.32')
    │       │           │       └── AuxSTArgs(outline='arguments', zfrom='17.30', zto='17.32')
    │       │           │           └── AuxSTPredicate(id='1', outline='extDigit', zfrom='17.30', zto='17.31')
    │       │           └── AuxSTStatementAssign(outline=':=', zfrom='18.26', zto='18.27')
    │       │               ├── AuxSTVariable(id='myLength', outline='var', reference=None, zfrom='18.16', zto='18.24')
    │       │               └── AuxSTVariable(id='i', outline='var', reference=None, zfrom='18.26', zto='18.27')
    │       └── AuxSTProperties(outline='properties')
    │           └── AuxSTClassInstance(def_type='classInstance', id='Length[]', mandatory=True, outline='property', zfrom='21.12', zto='24.13')
    │               ├── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='21.22', zto='21.25')
    │               ├── AuxSTSignature(outline='signature', zfrom='21.26', zto='21.34')
    │               └── AuxSTVarSpecList(outline='specificationList')
    │                   └── AuxSTStatementReturn(outline='return', zfrom='23.16', zto='23.31')
    │                       └── AuxSTVariable(id='myLength', outline='var', reference=None, zfrom='23.23', zto='23.31')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')