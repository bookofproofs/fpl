TestTheory
{
    theory
    {
        class CartesianProduct: Set
        {
            CartesianProduct(setList: +Set)
            {
                setItem: Set
                i: Nat
                i:= Zero()
                loop setItem setList
                (
                    i:=Succ(i)
                    self[i]:=setItem
                )
                myFrom := Nat(1)
                myLength:=i
            }

            mandatory Nat Length()
            {
                return myLength
            }
        }
    }

}


##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestTheory.CartesianProduct', id='CartesianProduct', reference=AuxSTClass())
│   ├── AuxSTGlobal(gid='TestTheory.CartesianProduct[1:+Set]', id='CartesianProduct[1:+Set]', reference=AuxSTConstructor())
│   └── AuxSTGlobal(gid='TestTheory.CartesianProduct.Length[]', id='CartesianProduct.Length[]', reference=AuxSTClassInstance())
└── AuxSTTheory(checksum='85785e89182daa009ee62baddfa2388c', file_name='test_statement_return_02.fpl', namespace='TestTheory', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['Set'], def_type='class', id='CartesianProduct', keyword='class', outline='definition', zfrom='5:9:39', zto='25:9:534')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='CartesianProduct[1:+Set]', outline='constructor', zfrom='7:13:89', zto='19:13:428')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='7:13:89', zto='7:43:119')
    │       │       │   └── AuxSTVarDec(id='setList', outline='var_decl', zfrom='7:30:106', zto='7:42:118')
    │       │       │       └── AuxSTType(id='Set', outline='type', type_mod='+', type_pattern=1, zfrom='7:39:115', zto='7:42:118')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       │           ├── AuxSTVarDec(id='setItem', outline='var_decl', zfrom='9:17:151', zto='9:28:162')
    │       │           │   └── AuxSTType(id='Set', outline='type', type_mod=None, type_pattern=1, zfrom='9:25:159', zto='9:28:162')
    │       │           ├── AuxSTVarDec(id='i', outline='var_decl', zfrom='10:17:180', zto='10:22:185')
    │       │           │   └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='10:19:182', zto='10:22:185')
    │       │           ├── AuxSTStatement(outline='statement', type=':=', zfrom='11:17:203', zto='11:26:212')
    │       │           │   ├── AuxSTVariable(id='i', outline='var', zfrom='11:17:203', zto='11:17:203')
    │       │           │   └── AuxSTPredicateWithArgs(id='Zero', outline='predicateWithArgs', reference=None, zfrom='11:21:207', zto='11:26:212')
    │       │           │       └── AuxSTArgs(outline='arguments', zfrom='11:25:211', zto='11:26:212')
    │       │           ├── AuxSTStatement(outline='statement', type='loop', zfrom='12:17:230', zto='16:17:353')
    │       │           │   ├── AuxSTVariable(id='setItem', outline='var', zfrom='12:22:235', zto='12:28:241')
    │       │           │   ├── AuxSTRange(left_included=False, outline='range', right_included=False, zfrom='', zto='')
    │       │           │   │   └── AuxSTVariable(id='setList', outline='var', zfrom='12:30:243', zto='12:36:249')
    │       │           │   ├── AuxSTStatement(outline='statement', type=':=', zfrom='14:29:297', zto='14:30:298')
    │       │           │   │   ├── AuxSTVariable(id='i', outline='var', zfrom='14:21:289', zto='14:21:289')
    │       │           │   │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='14:24:292', zto='14:30:298')
    │       │           │   │       └── AuxSTArgs(outline='arguments', zfrom='14:28:296', zto='14:30:298')
    │       │           │   │           └── AuxSTVariable(id='i', outline='var', zfrom='14:29:297', zto='14:29:297')
    │       │           │   └── AuxSTStatement(outline='statement', type=':=', zfrom='15:30:329', zto='15:36:335')
    │       │           │       ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='15:26:325', zto='15:27:326')
    │       │           │       │   └── AuxSTCoords(outline='coordinates', zfrom='15:25:324', zto='15:26:325')
    │       │           │       │       └── AuxSTVariable(id='i', outline='var', zfrom='15:26:325', zto='15:26:325')
    │       │           │       └── AuxSTVariable(id='setItem', outline='var', zfrom='15:30:329', zto='15:36:335')
    │       │           ├── AuxSTStatement(outline='statement', type=':=', zfrom='17:17:371', zto='17:32:386')
    │       │           │   ├── AuxSTVariable(id='myFrom', outline='var', zfrom='17:17:371', zto='17:22:376')
    │       │           │   └── AuxSTPredicateWithArgs(id='Nat', outline='predicateWithArgs', reference=None, zfrom='17:27:381', zto='17:32:386')
    │       │           │       └── AuxSTArgs(outline='arguments', zfrom='17:30:384', zto='17:32:386')
    │       │           │           └── AuxSTPredicate(id='1', outline='extDigit', zfrom='17:31:385', zto='17:31:385')
    │       │           └── AuxSTStatement(outline='statement', type=':=', zfrom='18:27:414', zto='18:27:414')
    │       │               ├── AuxSTVariable(id='myLength', outline='var', zfrom='18:17:404', zto='18:24:411')
    │       │               └── AuxSTVariable(id='i', outline='var', zfrom='18:27:414', zto='18:27:414')
    │       └── AuxSTProperties(outline='properties')
    │           └── AuxSTClassInstance(def_type='classInstance', id='Length[]', mandatory=True, outline='property', zfrom='21:13:443', zto='24:13:524')
    │               ├── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='21:22:452', zto='21:25:455')
    │               ├── AuxSTSignature(outline='signature', zfrom='21:27:457', zto='21:34:464')
    │               └── AuxSTVarSpecList(outline='specificationList')
    │                   └── AuxSTStatement(outline='statement', type='return', zfrom='23:17:496', zto='23:31:510')
    │                       └── AuxSTVariable(id='myLength', outline='var', zfrom='23:24:503', zto='23:31:510')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')