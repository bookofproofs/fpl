TestTheory
{
    theory
    {
        func Sum(list: *Nat)->Nat
        {
            result: Nat
            result:=Zero()
            loop addend list
            (
                result:=Add(result,addend)
            )
            return result
        }
    }

}


##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   └── AuxSTGlobal(gid='TestTheory.Sum[1:*Nat]', id='Sum[1:*Nat]', reference=AuxSTDefinitionFunctionalTerm())
└── AuxSTTheory(checksum='664b7cc29e91aab5c21995a1297c754c', file_name='test_statement_assign_02.fpl', namespace='TestTheory', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTDefinitionFunctionalTerm(def_type='functionalTerm', id='Sum[1:*Nat]', outline='definition', zfrom='5.9', zto='14.9')
    │       ├── AuxSTSignature(outline='signature', zfrom='5.14', zto='5.28')
    │       │   └── AuxSTVarDec(id='list', outline='var_decl', zfrom='5.17', zto='5.27')
    │       │       └── AuxSTType(id='Nat', outline='type', type_mod='*', type_pattern=1, zfrom='5.24', zto='5.27')
    │       ├── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='5.30', zto='5.33')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   ├── AuxSTVarDec(id='result', outline='var_decl', zfrom='7.12', zto='7.23')
    │       │   │   └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='7.20', zto='7.23')
    │       │   ├── AuxSTStatement(outline='statement', type=':=', zfrom='8.13', zto='8.26')
    │       │   │   ├── AuxSTVariable(id='result', outline='var', zfrom='8.12', zto='8.18')
    │       │   │   └── AuxSTPredicateWithArgs(id='Zero', outline='predicateWithArgs', reference=None, zfrom='8.21', zto='8.26')
    │       │   │       └── AuxSTArgs(outline='arguments', zfrom='8.25', zto='8.26')
    │       │   ├── AuxSTStatement(outline='statement', type='loop', zfrom='9.13', zto='12.13')
    │       │   │   ├── AuxSTVariable(id='addend', outline='var', zfrom='9.17', zto='9.23')
    │       │   │   ├── AuxSTRange(left_included=False, outline='range', right_included=False, zfrom='', zto='')
    │       │   │   │   └── AuxSTVariable(id='list', outline='var', zfrom='9.24', zto='9.28')
    │       │   │   └── AuxSTStatement(outline='statement', type=':=', zfrom='11.36', zto='11.42')
    │       │   │       ├── AuxSTVariable(id='result', outline='var', zfrom='11.16', zto='11.22')
    │       │   │       └── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='11.25', zto='11.42')
    │       │   │           └── AuxSTArgs(outline='arguments', zfrom='11.28', zto='11.42')
    │       │   │               ├── AuxSTVariable(id='result', outline='var', zfrom='11.28', zto='11.34')
    │       │   │               └── AuxSTVariable(id='addend', outline='var', zfrom='11.35', zto='11.41')
    │       │   └── AuxSTStatement(outline='statement', type='return', zfrom='13.13', zto='13.25')
    │       │       └── AuxSTVariable(id='result', outline='var', zfrom='13.19', zto='13.25')
    │       └── AuxSTProperties(outline='properties')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
