TestTheory
{
    theory
    {
        class UnlimitedTupleFrom: tpl
        {
            UnlimitedTupleFrom(from:Nat, x: tpl[from~])
            {
                self:=x
            }

            mandatory tpl Coord(i: Nat)
            {
                return self[i]
            }
        }
    }

}


##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestTheory.UnlimitedTupleFrom', id='UnlimitedTupleFrom', reference=AuxSTClass())
│   ├── AuxSTGlobal(gid='TestTheory.UnlimitedTupleFrom[1:Nat,1:tplrange[]]', id='UnlimitedTupleFrom[1:Nat,1:tplrange[]]', reference=AuxSTConstructor())
│   └── AuxSTGlobal(gid='TestTheory.UnlimitedTupleFrom.Coord[1:Nat]', id='UnlimitedTupleFrom.Coord[1:Nat]', reference=AuxSTClassInstance())
└── AuxSTTheory(checksum='0e149729bb7a4a3727503fa7bd049c19', file_name='test_statement_return_01.fpl', namespace='TestTheory', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['tpl'], def_type='class', id='UnlimitedTupleFrom', keyword='class', outline='definition', zfrom='5:9:39', zto='16:9:295')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='UnlimitedTupleFrom[1:Nat,1:tplrange[]]', outline='constructor', zfrom='7:13:91', zto='10:13:185')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='7:13:91', zto='7:55:133')
    │       │       │   ├── AuxSTVarDec(id='from', outline='var_decl', zfrom='7:32:110', zto='7:39:117')
    │       │       │   │   └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='7:36:114', zto='7:39:117')
    │       │       │   └── AuxSTVarDec(id='x', outline='var_decl', zfrom='7:42:120', zto='7:54:132')
    │       │       │       └── AuxSTType(id='tpl', outline='type', type_mod=None, type_pattern=9, zfrom='7:44:122', zto='7:54:132')
    │       │       │           └── AuxSTRange(left_included=True, outline='range', right_included=True, zfrom='7:48:126', zto='7:54:132')
    │       │       │               └── AuxSTCoords(outline='coordinates', zfrom='7:48:126', zto='7:52:130')
    │       │       │                   └── AuxSTVariable(id='from', outline='var', zfrom='7:49:127', zto='7:52:130')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       │           └── AuxSTStatement(outline='statement', type=':=', zfrom='9:23:171', zto='9:23:171')
    │       │               ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='9:17:165', zto='9:20:168')
    │       │               └── AuxSTVariable(id='x', outline='var', zfrom='9:23:171', zto='9:23:171')
    │       └── AuxSTProperties(outline='properties')
    │           └── AuxSTClassInstance(def_type='classInstance', id='Coord[1:Nat]', mandatory=True, outline='property', zfrom='12:13:200', zto='15:13:285')
    │               ├── AuxSTType(id='tpl', outline='type', type_mod=None, type_pattern=9, zfrom='12:22:209', zto='12:25:212')
    │               ├── AuxSTSignature(outline='signature', zfrom='12:27:214', zto='12:39:226')
    │               │   └── AuxSTVarDec(id='i', outline='var_decl', zfrom='12:33:220', zto='12:38:225')
    │               │       └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='12:35:222', zto='12:38:225')
    │               └── AuxSTVarSpecList(outline='specificationList')
    │                   └── AuxSTStatement(outline='statement', type='return', zfrom='14:17:258', zto='14:30:271')
    │                       └── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='14:29:270', zto='14:30:271')
    │                           └── AuxSTCoords(outline='coordinates', zfrom='14:28:269', zto='14:29:270')
    │                               └── AuxSTVariable(id='i', outline='var', zfrom='14:29:270', zto='14:29:270')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')