TestTheory
{
    theory
    {
        class Nat: obj
        {
            Nat(x: @extDecimal)
            {
                cases
                (
                    case Equals(x,0) :
                        self := Zero()
                    case Equals(x,1) :
                        self := Succ(Zero())
                    case Equals(x,2) :
                        self := Succ(Succ(Zero()))
                    else:
                        // else case addressed using a python delegate
                        self := Succ(py.decrement(x))
                )
            }
        }
    }
}
##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestTheory.Nat', id='Nat', reference=AuxSTClass())
│   └── AuxSTGlobal(gid='TestTheory.Nat[1:@extDecimal]', id='Nat[1:@extDecimal]', reference=AuxSTConstructor())
└── AuxSTTheory(checksum='f03e8ddb63742af2ea616f3f0163c2e1', file_name='test_statement_cases_01.fpl', namespace='TestTheory', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['obj'], def_type='class', id='Nat', keyword='class', outline='definition', zfrom='5.9', zto='22.9')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='Nat[1:@extDecimal]', outline='constructor', zfrom='7.13', zto='21.13')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='7.13', zto='7.31')
    │       │       │   └── AuxSTVarDec(id='x', outline='var_decl', zfrom='7.16', zto='7.30')
    │       │       │       └── AuxSTType(id='@extDecimal', outline='type', type_mod=None, type_pattern=32, zfrom='7.19', zto='7.30')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       │           └── AuxSTStatement(outline='statement', type='cases', zfrom='15.21', zto='20.17')
    │       │               ├── AuxSTStatement(outline='statement', type='case', zfrom='11.26', zto='13.20')
    │       │               │   ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='11.26', zto='11.36')
    │       │               │   │   └── AuxSTArgs(outline='arguments', zfrom='11.32', zto='11.36')
    │       │               │   │       ├── AuxSTVariable(id='x', outline='var', zfrom='11.32', zto='11.33')
    │       │               │   │       └── AuxSTPredicate(id='0', outline='extDigit', zfrom='11.35', zto='11.35')
    │       │               │   └── AuxSTVarSpecList(outline='specificationList')
    │       │               │       └── AuxSTStatement(outline='statement', type=':=', zfrom='12.25', zto='12.38')
    │       │               │           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='12.25', zto='12.28')
    │       │               │           └── AuxSTPredicateWithArgs(id='Zero', outline='predicateWithArgs', reference=None, zfrom='12.33', zto='12.38')
    │       │               │               └── AuxSTArgs(outline='arguments', zfrom='12.37', zto='12.38')
    │       │               ├── AuxSTStatement(outline='statement', type='case', zfrom='13.26', zto='15.20')
    │       │               │   ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='13.26', zto='13.36')
    │       │               │   │   └── AuxSTArgs(outline='arguments', zfrom='13.32', zto='13.36')
    │       │               │   │       ├── AuxSTVariable(id='x', outline='var', zfrom='13.32', zto='13.33')
    │       │               │   │       └── AuxSTPredicate(id='1', outline='extDigit', zfrom='13.35', zto='13.35')
    │       │               │   └── AuxSTVarSpecList(outline='specificationList')
    │       │               │       └── AuxSTStatement(outline='statement', type=':=', zfrom='14.25', zto='14.44')
    │       │               │           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='14.25', zto='14.28')
    │       │               │           └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='14.33', zto='14.44')
    │       │               │               └── AuxSTArgs(outline='arguments', zfrom='14.37', zto='14.44')
    │       │               │                   └── AuxSTPredicateWithArgs(id='Zero', outline='predicateWithArgs', reference=None, zfrom='14.38', zto='14.43')
    │       │               │                       └── AuxSTArgs(outline='arguments', zfrom='14.42', zto='14.43')
    │       │               ├── AuxSTStatement(outline='statement', type='case', zfrom='15.26', zto='17.20')
    │       │               │   ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='15.26', zto='15.36')
    │       │               │   │   └── AuxSTArgs(outline='arguments', zfrom='15.32', zto='15.36')
    │       │               │   │       ├── AuxSTVariable(id='x', outline='var', zfrom='15.32', zto='15.33')
    │       │               │   │       └── AuxSTPredicate(id='2', outline='extDigit', zfrom='15.35', zto='15.35')
    │       │               │   └── AuxSTVarSpecList(outline='specificationList')
    │       │               │       └── AuxSTStatement(outline='statement', type=':=', zfrom='16.25', zto='16.50')
    │       │               │           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='16.25', zto='16.28')
    │       │               │           └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='16.33', zto='16.50')
    │       │               │               └── AuxSTArgs(outline='arguments', zfrom='16.37', zto='16.50')
    │       │               │                   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='16.38', zto='16.49')
    │       │               │                       └── AuxSTArgs(outline='arguments', zfrom='16.42', zto='16.49')
    │       │               │                           └── AuxSTPredicateWithArgs(id='Zero', outline='predicateWithArgs', reference=None, zfrom='16.43', zto='16.48')
    │       │               │                               └── AuxSTArgs(outline='arguments', zfrom='16.47', zto='16.48')
    │       │               └── AuxSTStatement(outline='statement', type='else', zfrom='17.21', zto='20.16')
    │       │                   └── AuxSTVarSpecList(outline='specificationList')
    │       │                       └── AuxSTStatement(outline='statement', type=':=', zfrom='19.51', zto='19.53')
    │       │                           ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='19.25', zto='19.28')
    │       │                           └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='19.33', zto='19.53')
    │       │                               └── AuxSTArgs(outline='arguments', zfrom='19.37', zto='19.53')
    │       │                                   └── AuxSTStatement(id='decrement', outline='statement', type='py', zfrom='19.38', zto='19.52')
    │       │                                       └── AuxSTVariable(id='x', outline='var', zfrom='19.50', zto='19.51')
    │       └── AuxSTProperties(outline='properties')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
