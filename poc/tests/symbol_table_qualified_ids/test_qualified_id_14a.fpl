 TestNamespace.SubNamespace
{
    theory
    {
        pred TestPredicate()
        {
            self.SomeObject().AnotherReference()

            mandatory obj SomeObject()
            {
                x: SomeObjectType
                x:=SomeObjectType()
                return x
            }
        }
    }
}
##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.SubNamespace.TestPredicate[]', id='TestPredicate[]', reference=AuxSTDefinitionPredicate(), theory=AuxSTTheory())
│   └── AuxSTGlobal(gid='TestNamespace.SubNamespace.TestPredicate[].SomeObject[]', id='TestPredicate[].SomeObject[]', reference=AuxSTClassInstance(), theory=AuxSTTheory())
└── AuxSTTheory(checksum='d6edb05a60c4f625df11a21431cf94ef', file_name='test_qualified_id_14a.fpl', namespace='TestNamespace.SubNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTDefinitionPredicate(def_type='predicateDeclaration', id='TestPredicate[]', keyword='pred', outline='definition', zfrom='5.8', zto='15.9')
    │       ├── AuxSTSignature(outline='signature', zfrom='5.13', zto='5.28')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='7.12', zto='7.16')
    │       │   └── AuxSTQualified(outline='qualified', zfrom='7.16', zto='7.16')
    │       │       └── AuxSTPredicateWithArgs(id='SomeObject', outline='predicateWithArgs', reference=None, zfrom='7.17', zto='7.29')
    │       │           ├── AuxSTArgs(outline='arguments', zfrom='7.28', zto='7.29')
    │       │           └── AuxSTQualified(outline='qualified', zfrom='7.29', zto='7.29')
    │       │               └── AuxSTPredicateWithArgs(id='AnotherReference', outline='predicateWithArgs', reference=None, zfrom='7.30', zto='7.48')
    │       │                   └── AuxSTArgs(outline='arguments', zfrom='7.47', zto='7.48')
    │       └── AuxSTProperties(outline='properties')
    │           └── AuxSTClassInstance(def_type='classInstance', id='SomeObject[]', mandatory=True, outline='property', zfrom='9.12', zto='14.13')
    │               ├── AuxSTType(id='obj', outline='type', type_mod=None, type_pattern=17, zfrom='9.22', zto='9.25')
    │               ├── AuxSTSignature(outline='signature', zfrom='9.26', zto='9.38')
    │               └── AuxSTVarSpecList(outline='specificationList')
    │                   ├── AuxSTVarDec(id='x', outline='var_decl', zfrom='11.16', zto='11.33')
    │                   │   └── AuxSTType(id='SomeObjectType', outline='type', type_mod=None, type_pattern=1, zfrom='11.19', zto='11.33')
    │                   ├── AuxSTStatement(outline='statement', type=':=', zfrom='12.16', zto='12.35')
    │                   │   ├── AuxSTVariable(id='x', outline='var', zfrom='12.16', zto='12.17')
    │                   │   └── AuxSTPredicateWithArgs(id='SomeObjectType', outline='predicateWithArgs', reference=None, zfrom='12.19', zto='12.35')
    │                   │       └── AuxSTArgs(outline='arguments', zfrom='12.34', zto='12.35')
    │                   └── AuxSTStatement(outline='statement', type='return', zfrom='13.16', zto='13.24')
    │                       └── AuxSTVariable(id='x', outline='var', zfrom='13.23', zto='13.24')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
