 TestNamespace.SubNamespace
{
    theory
    {
        pred TestPredicate()
        {
            self.SomeProperty().AnotherProperty.YetAnotherProperty()
        }
    }
}
##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   └── AuxSTGlobal(gid='TestNamespace.SubNamespace.TestPredicate[]', id='TestPredicate[]', reference=AuxSTDefinitionPredicate(), theory=AuxSTTheory())
└── AuxSTTheory(checksum='1b9967f3724c0163b0a487c0cc37d3d9', file_name='test_qualified_id_15b.fpl', namespace='TestNamespace.SubNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTDefinitionPredicate(def_type='predicateDeclaration', id='TestPredicate[]', keyword='pred', outline='definition', zfrom='5.8', zto='8.9')
    │       ├── AuxSTSignature(outline='signature', zfrom='5.13', zto='5.28')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='7.12', zto='7.16')
    │       │   └── AuxSTQualified(outline='qualified', zfrom='7.16', zto='7.16')
    │       │       └── AuxSTIdentifier(id='SomeProperty', outline='id', reference=None, zfrom='7.17', zto='7.31')
    │       │           ├── AuxSTArgs(outline='arguments', zfrom='7.30', zto='7.31')
    │       │           └── AuxSTQualified(outline='qualified', zfrom='7.31', zto='7.31')
    │       │               └── AuxSTIdentifier(id='AnotherProperty.YetAnotherProperty', outline='id', reference=None, zfrom='7.32', zto='7.68')
    │       │                   └── AuxSTArgs(outline='arguments', zfrom='7.67', zto='7.68')
    │       └── AuxSTProperties(outline='properties')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
