 TestNamespace
{
    theory
    {
        class UnitRing: Ring
        {

            UnitRing(x: tpl, add, mul: BinOp)
            {
                self:=Ring(x,add,mul)
            }

            mandatory Monoid MultiplicativeMonoid()
            {
                return Monoid(self.CarrierSet(), self.Mul())
            }
        }
    }
}
##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.UnitRing', id='UnitRing', reference=AuxSTClass(), theory=AuxSTTheory())
│   ├── AuxSTGlobal(gid='TestNamespace.UnitRing[1:tpl,2:BinOp]', id='UnitRing[1:tpl,2:BinOp]', reference=AuxSTConstructor(), theory=AuxSTTheory())
│   └── AuxSTGlobal(gid='TestNamespace.UnitRing.MultiplicativeMonoid[]', id='UnitRing.MultiplicativeMonoid[]', reference=AuxSTClassInstance(), theory=AuxSTTheory())
└── AuxSTTheory(checksum='b9abae611a44980f98ed44a1e5f44b62', file_name='test_qualified_id_03.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTClass(class_types=['Ring'], def_type='class', id='UnitRing', keyword='class', outline='definition', zfrom='5.8', zto='17.9')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       ├── AuxSTConstructors(outline='constructors')
    │       │   └── AuxSTConstructor(id='UnitRing[1:tpl,2:BinOp]', outline='constructor', zfrom='8.12', zto='11.13')
    │       │       ├── AuxSTSignature(outline='signature', zfrom='8.12', zto='8.45')
    │       │       │   ├── AuxSTVarDec(id='x', outline='var_decl', zfrom='8.21', zto='8.27')
    │       │       │   │   └── AuxSTType(id='tpl', outline='type', type_mod=None, type_pattern=9, zfrom='8.24', zto='8.27')
    │       │       │   ├── AuxSTVarDec(id='mul', outline='var_decl', zfrom='8.34', zto='8.44')
    │       │       │   │   └── AuxSTType(id='BinOp', outline='type', type_mod=None, type_pattern=1, zfrom='8.39', zto='8.44')
    │       │       │   └── AuxSTVarDec(id='add', outline='var_decl', zfrom='8.29', zto='8.44')
    │       │       │       └── AuxSTType(id='BinOp', outline='type', type_mod=None, type_pattern=1, zfrom='8.39', zto='8.44')
    │       │       └── AuxSTVarSpecList(outline='specificationList')
    │       │           └── AuxSTStatementAssign(outline=':=', zfrom='10.33', zto='10.37')
    │       │               ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='10.16', zto='10.20')
    │       │               └── AuxSTPredicateWithArgs(id='Ring', outline='predicateWithArgs', reference=None, zfrom='10.22', zto='10.37')
    │       │                   └── AuxSTArgs(outline='arguments', zfrom='10.27', zto='10.37')
    │       │                       ├── AuxSTVariable(id='x', outline='var', reference=None, zfrom='10.27', zto='10.28')
    │       │                       ├── AuxSTVariable(id='add', outline='var', reference=None, zfrom='10.29', zto='10.32')
    │       │                       └── AuxSTVariable(id='mul', outline='var', reference=None, zfrom='10.33', zto='10.36')
    │       └── AuxSTProperties(outline='properties')
    │           └── AuxSTClassInstance(def_type='classInstance', id='MultiplicativeMonoid[]', mandatory=True, outline='property', zfrom='13.12', zto='16.13')
    │               ├── AuxSTType(id='Monoid', outline='type', type_mod=None, type_pattern=1, zfrom='13.22', zto='13.28')
    │               ├── AuxSTSignature(outline='signature', zfrom='13.29', zto='13.51')
    │               └── AuxSTVarSpecList(outline='specificationList')
    │                   └── AuxSTStatementReturn(outline='return', zfrom='15.16', zto='15.60')
    │                       └── AuxSTPredicateWithArgs(id='Monoid', outline='predicateWithArgs', reference=None, zfrom='15.23', zto='15.60')
    │                           └── AuxSTArgs(outline='arguments', zfrom='15.30', zto='15.60')
    │                               ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='15.30', zto='15.34')
    │                               │   └── AuxSTQualified(outline='qualified', zfrom='15.34', zto='15.34')
    │                               │       └── AuxSTPredicateWithArgs(id='CarrierSet', outline='predicateWithArgs', reference=None, zfrom='15.35', zto='15.47')
    │                               │           └── AuxSTArgs(outline='arguments', zfrom='15.46', zto='15.47')
    │                               └── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='15.49', zto='15.53')
    │                                   └── AuxSTQualified(outline='qualified', zfrom='15.53', zto='15.53')
    │                                       └── AuxSTPredicateWithArgs(id='Mul', outline='predicateWithArgs', reference=None, zfrom='15.54', zto='15.59')
    │                                           └── AuxSTArgs(outline='arguments', zfrom='15.58', zto='15.59')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
