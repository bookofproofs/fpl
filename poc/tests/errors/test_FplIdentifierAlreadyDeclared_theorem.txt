TestNamespace
{
    theory
    {
        theorem AddIsUnique(op: Add)
        {
            n,m: Nat
            anotherAdd: Add
            pre:
                and
                    (
                        Equals(Add(n,0),n),
                        Equals(anotherAdd(n,0),n),
                        Equals(Add(n,Succ(m)), Succ(Add(n,m))),
                        Equals(anotherAdd(n,Succ(m)), Succ(anotherAdd(n,m)))
                    )
            con:
                all n
                (
                    all m
                    (
                        Equals(Add(n,m), anotherAdd(n,m))
                    )
                )
        }

        thm AddIsUnique()
        {
            k, limit: Nat
            f: Addend
            premise:
                loop k [Nat(1)~limit]
                (
                    assert Equals(f(k),k)
                )
            conclusion:
                all k
                (
                    Equals(Sum(1,k,f),Div(Mul(k,Succ(k)),2))
                )

        }
    }
}

##############################

FplIdentifierAlreadyDeclared:27:23: Identifier AddIsUnique already defined at (5,27)