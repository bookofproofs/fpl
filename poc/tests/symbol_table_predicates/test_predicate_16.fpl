TestNamespace
{
    theory
    {
        pred Test()
        {
            p,q: pred
            and (p, q)

            mandatory pred PropTest(x,y: Nat)
            {
                Equals(x,y)
            }

            optional func PropTest1(x,y: Nat) -> Nat
            {
                return Add(x,y)
            }

            mandatory Nat PropTest2()
            {
                self := Nat(2)
            }

        }

    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.Test[]', id='Test[]', reference=AuxSTDefinitionPredicate())
│   ├── AuxSTGlobal(gid='TestNamespace.Test[].PropTest[2:Nat]', id='Test[].PropTest[2:Nat]', reference=AuxSTPredicateInstance())
│   ├── AuxSTGlobal(gid='TestNamespace.Test[].PropTest1[2:Nat]', id='Test[].PropTest1[2:Nat]', reference=AuxSTFunctionalTermInstance())
│   └── AuxSTGlobal(gid='TestNamespace.Test[].PropTest2[]', id='Test[].PropTest2[]', reference=AuxSTClassInstance())
└── AuxSTTheory(checksum='1c25ee7ae3634aed4a9052566f4d083b', file_name='test_predicate_16.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTDefinitionPredicate(def_type='predicateDeclaration', id='Test[]', keyword='pred', outline='definition', zfrom='10:20:129', zto='25:9:433')
    │       ├── AuxSTSignature(outline='signature', zfrom='5:14:47', zto='5:19:52')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   ├── AuxSTVarDec(id='p', outline='var_decl', zfrom='7:13:76', zto='7:21:84')
    │       │   │   └── AuxSTType(id='pred', outline='type', type_mod=None, type_pattern=18, zfrom='7:17:80', zto='7:21:84')
    │       │   └── AuxSTVarDec(id='q', outline='var_decl', zfrom='7:13:76', zto='7:21:84')
    │       │       └── AuxSTType(id='pred', outline='type', type_mod=None, type_pattern=18, zfrom='7:17:80', zto='7:21:84')
    │       ├── AuxSTPredicate(outline='and', zfrom='8:13:98', zto='8:22:107')
    │       │   ├── AuxSTVariable(id='p', outline='var', zfrom='8:18:103', zto='8:18:103')
    │       │   └── AuxSTVariable(id='q', outline='var', zfrom='8:21:106', zto='8:21:106')
    │       └── AuxSTProperties(outline='properties')
    │           ├── AuxSTPredicateInstance(def_type='predicateInstance', id='PropTest[2:Nat]', keyword='pred', mandatory=True, outline='property', zfrom='10:13:122', zto='13:13:210')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='10:28:137', zto='10:45:154')
    │           │   │   ├── AuxSTVarDec(id='x', outline='var_decl', zfrom='10:37:146', zto='10:44:153')
    │           │   │   │   └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='10:41:150', zto='10:44:153')
    │           │   │   └── AuxSTVarDec(id='y', outline='var_decl', zfrom='10:37:146', zto='10:44:153')
    │           │   │       └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='10:41:150', zto='10:44:153')
    │           │   ├── AuxSTVarSpecList(outline='specificationList')
    │           │   └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='12:17:186', zto='12:27:196')
    │           │       └── AuxSTArgs(outline='arguments', zfrom='12:23:192', zto='12:27:196')
    │           │           ├── AuxSTVariable(id='x', outline='var', zfrom='12:24:193', zto='12:24:193')
    │           │           └── AuxSTVariable(id='y', outline='var', zfrom='12:26:195', zto='12:26:195')
    │           ├── AuxSTFunctionalTermInstance(def_type='functionalTermInstance', id='PropTest1[2:Nat]', keyword='func', mandatory=False, outline='property', zfrom='15:13:225', zto='18:13:324')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='15:27:239', zto='15:45:257')
    │           │   │   ├── AuxSTVarDec(id='x', outline='var_decl', zfrom='15:37:249', zto='15:44:256')
    │           │   │   │   └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='15:41:253', zto='15:44:256')
    │           │   │   └── AuxSTVarDec(id='y', outline='var_decl', zfrom='15:37:249', zto='15:44:256')
    │           │   │       └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='15:41:253', zto='15:44:256')
    │           │   ├── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='15:49:261', zto='15:52:264')
    │           │   └── AuxSTVarSpecList(outline='specificationList')
    │           │       └── AuxSTStatement(outline='statement', type='return', zfrom='17:17:296', zto='17:31:310')
    │           │           └── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='17:24:303', zto='17:31:310')
    │           │               └── AuxSTArgs(outline='arguments', zfrom='17:27:306', zto='17:31:310')
    │           │                   ├── AuxSTVariable(id='x', outline='var', zfrom='17:28:307', zto='17:28:307')
    │           │                   └── AuxSTVariable(id='y', outline='var', zfrom='17:30:309', zto='17:30:309')
    │           └── AuxSTClassInstance(def_type='classInstance', id='PropTest2[]', mandatory=True, outline='property', zfrom='20:13:339', zto='23:13:422')
    │               ├── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='20:22:348', zto='20:25:351')
    │               ├── AuxSTSignature(outline='signature', zfrom='20:27:353', zto='20:37:363')
    │               └── AuxSTVarSpecList(outline='specificationList')
    │                   └── AuxSTStatement(outline='statement', type=':=', zfrom='22:17:395', zto='22:30:408')
    │                       ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None, zfrom='22:17:395', zto='22:20:398')
    │                       └── AuxSTPredicateWithArgs(id='Nat', outline='predicateWithArgs', reference=None, zfrom='22:25:403', zto='22:30:408')
    │                           └── AuxSTArgs(outline='arguments', zfrom='22:28:406', zto='22:30:408')
    │                               └── AuxSTPredicate(id='2', outline='extDigit', zfrom='22:29:407', zto='22:29:407')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')