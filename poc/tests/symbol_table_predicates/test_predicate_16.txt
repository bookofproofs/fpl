TestNamespace
{
    theory
    {
        pred Test()
        {
            p,q: pred
            and (p, q)

            mandatory pred PropTest(x,y: Nat)
            {
                Equals(x,y)
            }

            optional func PropTest1(x,y: Nat) -> Nat
            {
                return Add(x,y)
            }

            mandatory Nat PropTest2()
            {
                self := Nat(2)
            }

        }

    }
}

##############################

AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.Test[]', id='Test[]', reference=AuxSTDefinitionPredicate())
│   ├── AuxSTGlobal(gid='TestNamespace.Test[].PropTest[2:Nat]', id='Test[].PropTest[2:Nat]', reference=AuxSTPredicateInstance())
│   ├── AuxSTGlobal(gid='TestNamespace.Test[].PropTest1[2:Nat]', id='Test[].PropTest1[2:Nat]', reference=AuxSTFunctionalTermInstance())
│   └── AuxSTGlobal(gid='TestNamespace.Test[].PropTest2[]', id='Test[].PropTest2[]', reference=AuxSTClassInstance())
├── AuxSTTheory(namespace='TestNamespace', outline='theory', theory_name='test_predicate_16')
│   ├── AuxSTOutline(outline='uses')
│   ├── AuxSTOutline(outline='axioms')
│   ├── AuxSTOutline(outline='inferenceRules')
│   ├── AuxSTOutline(outline='definitions')
│   │   └── AuxSTDefinitionPredicate(def_type='predicateDeclaration', id='Test[]', info=AuxAstInfo(), outline='definition')
│   │       ├── AuxSTSignature(info=AuxAstInfo(), outline='signature')
│   │       ├── AuxSTVarSpecList(outline='specificationList')
│   │       │   ├── AuxSTVarDec(id='p', info=AuxAstInfo(), outline='var_dec', type='pred', type_mod=None, type_pattern=18)
│   │       │   └── AuxSTVarDec(id='q', info=AuxAstInfo(), outline='var_dec', type='pred', type_mod=None, type_pattern=18)
│   │       ├── AuxSTPredicate(info=AuxAstInfo(), outline='and')
│   │       │   ├── AuxSTVariable(id='p', info=AuxAstInfo(), outline='var')
│   │       │   └── AuxSTVariable(id='q', info=AuxAstInfo(), outline='var')
│   │       └── AuxSTProperties(outline='properties')
│   │           ├── AuxSTPredicateInstance(def_type='predicateDeclaration', id='PropTest[2:Nat]', info=AuxAstInfo(), outline='property')
│   │           │   ├── AuxSTSignature(info=AuxAstInfo(), outline='signature')
│   │           │   │   ├── AuxSTVarDec(id='x', info=AuxAstInfo(), outline='var_dec', type='Nat', type_mod=None, type_pattern=1)
│   │           │   │   └── AuxSTVarDec(id='y', info=AuxAstInfo(), outline='var_dec', type='Nat', type_mod=None, type_pattern=1)
│   │           │   ├── AuxSTVarSpecList(outline='specificationList')
│   │           │   └── AuxSTPredicateWithArgs(id='Equals', info=AuxAstInfo(), outline='predicateWithArgs', reference=None)
│   │           │       ├── AuxSTVariable(id='x', info=AuxAstInfo(), outline='var')
│   │           │       └── AuxSTVariable(id='y', info=AuxAstInfo(), outline='var')
│   │           ├── AuxSTFunctionalTermInstance(def_type='functionalTerm', id='PropTest1[2:Nat]', info=AuxAstInfo(), outline='property')
│   │           │   ├── AuxSTSignature(info=AuxAstInfo(), outline='signature')
│   │           │   │   ├── AuxSTVarDec(id='x', info=AuxAstInfo(), outline='var_dec', type='Nat', type_mod=None, type_pattern=1)
│   │           │   │   └── AuxSTVarDec(id='y', info=AuxAstInfo(), outline='var_dec', type='Nat', type_mod=None, type_pattern=1)
│   │           │   ├── AuxSTType(id='Nat', info=AuxAstInfo(), outline='type', type_mod=None, type_pattern=1)
│   │           │   └── AuxSTVarSpecList(outline='specificationList')
│   │           │       └── AuxSTStatement(info=AuxAstInfo(), outline='statement', type='return')
│   │           │           └── AuxSTPredicateWithArgs(id='Add', info=AuxAstInfo(), outline='predicateWithArgs', reference=None)
│   │           │               ├── AuxSTVariable(id='x', info=AuxAstInfo(), outline='var')
│   │           │               └── AuxSTVariable(id='y', info=AuxAstInfo(), outline='var')
│   │           └── AuxSTClassInstance(def_type='property', id='PropTest2[]', info=AuxAstInfo(), outline='property')
│   │               ├── AuxSTType(id='Nat', info=AuxAstInfo(), outline='type', type_mod=None, type_pattern=1)
│   │               ├── AuxSTSignature(info=AuxAstInfo(), outline='signature')
│   │               └── AuxSTVarSpecList(outline='specificationList')
│   │                   └── AuxSTStatement(info=AuxAstInfo(), outline='statement', type=':=')
│   │                       ├── AuxSTSelf(id='self', number_ats=0, outline='self', reference=None)
│   │                       └── AuxSTPredicateWithArgs(id='Nat', info=AuxAstInfo(), outline='predicateWithArgs', reference=None)
│   │                           └── AuxSTPredicate(id='2', info=AuxAstInfo(), outline='extDigit')
│   ├── AuxSTOutline(outline='theorems')
│   ├── AuxSTOutline(outline='lemmas')
│   ├── AuxSTOutline(outline='propositions')
│   ├── AuxSTOutline(outline='conjectures')
│   ├── AuxSTOutline(outline='corollaries')
│   └── AuxSTOutline(outline='proofs')
└── AuxSTLocalizations(outline='localizations')
