TestNamespace
{
    theory
    {
        pred NotEquals(x,y: tpl)
        {
            not
            (
                Equals(x,y)
            )
        }

    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   └── AuxSTGlobal(gid='TestNamespace.NotEquals[2:tpl]', id='NotEquals[2:tpl]', reference=AuxSTDefinitionPredicate())
└── AuxSTTheory(checksum='6ace6d19e48d392bc471f48d8c2115a0', file_name='test_predicate_12.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTDefinitionPredicate(def_type='predicateDeclaration', id='NotEquals[2:tpl]', keyword='pred', outline='definition', zfrom='5:8:41', zto='11:9:157')
    │       ├── AuxSTSignature(outline='signature', zfrom='5:14:47', zto='5:32:65')
    │       │   ├── AuxSTVarDec(id='x', outline='var_decl', type='tpl', type_mod=None, type_pattern=9, zfrom='5:23:56', zto='5:31:64')
    │       │   └── AuxSTVarDec(id='y', outline='var_decl', type='tpl', type_mod=None, type_pattern=9, zfrom='5:23:56', zto='5:31:64')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       ├── AuxSTPredicate(outline='not', zfrom='7:12:88', zto='10:13:147')
    │       │   └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='9:16:122', zto='9:27:133')
    │       │       ├── AuxSTVariable(id='x', outline='var', zfrom='9:23:129', zto='9:24:130')
    │       │       └── AuxSTVariable(id='y', outline='var', zfrom='9:25:131', zto='9:26:132')
    │       └── AuxSTProperties(outline='properties')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')