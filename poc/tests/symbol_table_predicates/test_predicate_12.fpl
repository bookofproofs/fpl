TestNamespace
{
    theory
    {
        pred NotEquals(x,y: tpl)
        {
            not
            (
                Equals(x,y)
            )
        }

    }
}
##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   └── AuxSTGlobal(gid='TestNamespace.NotEquals[2:tpl]', id='NotEquals[2:tpl]', reference=AuxSTDefinitionPredicate(), theory=AuxSTTheory())
└── AuxSTTheory(checksum='6ace6d19e48d392bc471f48d8c2115a0', file_name='test_predicate_12.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTDefinitionPredicate(def_type='predicateDeclaration', id='NotEquals[2:tpl]', keyword='pred', outline='definition', zfrom='5.8', zto='11.9')
    │       ├── AuxSTSignature(outline='signature', zfrom='5.13', zto='5.32')
    │       │   ├── AuxSTVarDec(id='x', outline='var_decl', zfrom='5.23', zto='5.31')
    │       │   │   └── AuxSTType(id='tpl', outline='type', type_mod=None, type_pattern=9, zfrom='5.28', zto='5.31')
    │       │   └── AuxSTVarDec(id='y', outline='var_decl', zfrom='5.25', zto='5.31')
    │       │       └── AuxSTType(id='tpl', outline='type', type_mod=None, type_pattern=9, zfrom='5.28', zto='5.31')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       ├── AuxSTPredicate(outline='not', zfrom='7.12', zto='10.13')
    │       │   └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='9.16', zto='9.27')
    │       │       └── AuxSTArgs(outline='arguments', zfrom='9.23', zto='9.27')
    │       │           ├── AuxSTVariable(id='x', outline='var', reference=None, zfrom='9.23', zto='9.24')
    │       │           └── AuxSTVariable(id='y', outline='var', reference=None, zfrom='9.25', zto='9.26')
    │       └── AuxSTProperties(outline='properties')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')