TestNamespace
{
    theory
    {
        pred Test()
        {
            x,y: pred
            ex$1 x,y
            (
                and (x,y)
            )
        }

    }
}

##############################

AnyNode(outline='root')
├── AnyNode(outline='globals')
│   └── AuxSTGlobal(gid='TestNamespace.Test[]', id='Test[]', reference=AuxSTDefinitionPredicate())
├── AuxSTTheory(namespace='TestNamespace', outline='theory', theory_name='test_predicate_15')
│   ├── AuxSTOutline(outline='uses')
│   ├── AuxSTOutline(outline='axioms')
│   ├── AuxSTOutline(outline='inferenceRules')
│   ├── AuxSTOutline(outline='definitions')
│   │   └── AuxSTDefinitionPredicate(def_type='predicateDeclaration', id='Test[]', info=AuxAstInfo(), outline='definition')
│   │       ├── AuxSTSignature(info=AuxAstInfo(), outline='signature')
│   │       ├── AuxSTVarSpecList(outline='specificationList')
│   │       │   ├── AuxSTVarDec(id='x', info=AuxAstInfo(), outline='var_dec', type='pred', type_mod=None, type_pattern=18)
│   │       │   └── AuxSTVarDec(id='y', info=AuxAstInfo(), outline='var_dec', type='pred', type_mod=None, type_pattern=18)
│   │       ├── AuxSTPredicate(bound_vars=['x', 'y'], exists_number=1, info=AuxAstInfo(), outline='ex')
│   │       │   └── AuxSTPredicate(info=AuxAstInfo(), outline='and')
│   │       │       ├── AuxSTVariable(id='x', info=AuxAstInfo(), outline='var')
│   │       │       └── AuxSTVariable(id='y', info=AuxAstInfo(), outline='var')
│   │       └── AuxSTProperties(outline='properties')
│   ├── AuxSTOutline(outline='theorems')
│   ├── AuxSTOutline(outline='lemmas')
│   ├── AuxSTOutline(outline='propositions')
│   ├── AuxSTOutline(outline='conjectures')
│   ├── AuxSTOutline(outline='corollaries')
│   └── AuxSTOutline(outline='proofs')
└── AuxSTLocalizations(outline='localizations')