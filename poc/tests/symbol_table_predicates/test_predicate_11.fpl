TestNamespace
{
    theory
    {
        pred Test()
        {
            p,q: pred
            and (p, impl (p,q) )
        }

    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   └── AuxSTGlobal(gid='TestNamespace.Test[]', id='Test[]', reference=AuxSTDefinitionPredicate())
└── AuxSTTheory(checksum='3a0b29413dc3f21b1ff3f43cef9c8623', file_name='test_predicate_11.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTDefinitionPredicate(def_type='predicateDeclaration', id='Test[]', keyword='pred', outline='definition', zfrom='7:18:81', zto='9:9:127')
    │       ├── AuxSTSignature(outline='signature', zfrom='5:14:47', zto='5:19:52')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   ├── AuxSTVarDec(id='p', outline='var_decl', zfrom='7:13:76', zto='7:21:84')
    │       │   │   └── AuxSTType(id='pred', outline='type', type_mod=None, type_pattern=18, zfrom='7:17:80', zto='7:21:84')
    │       │   └── AuxSTVarDec(id='q', outline='var_decl', zfrom='7:13:76', zto='7:21:84')
    │       │       └── AuxSTType(id='pred', outline='type', type_mod=None, type_pattern=18, zfrom='7:17:80', zto='7:21:84')
    │       ├── AuxSTPredicate(outline='and', zfrom='8:13:98', zto='8:32:117')
    │       │   ├── AuxSTVariable(id='p', outline='var', zfrom='8:18:103', zto='8:18:103')
    │       │   └── AuxSTPredicate(outline='=>', zfrom='8:21:106', zto='8:30:115')
    │       │       ├── AuxSTVariable(id='p', outline='var', zfrom='8:27:112', zto='8:27:112')
    │       │       └── AuxSTVariable(id='q', outline='var', zfrom='8:29:114', zto='8:29:114')
    │       └── AuxSTProperties(outline='properties')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
