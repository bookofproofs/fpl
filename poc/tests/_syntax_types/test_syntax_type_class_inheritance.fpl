TestNamespace
{
    theory
    {
        // object declarations (allowed both, syntactically and semantically)
        class Test: obj {}
        class Test: object {}
        // object TypeWithCoord in Signature (allowed both, syntactically and in general semantically)

        // generic declarations (syntactically allowed for classes, semantically not allowed for classes)
        class Test: tpl {}
        class Test: template {}
        class Test: tplSetElem {}
        class Test: tpl123 {}


        // predicate declarations (syntactically allowed for classes, semantically not allowed for classes)
        class Test: pred {}
        class Test: predicate {}

        // function declarations (syntactically allowed for classes, semantically not allowed for classes)
        class Test: func {}
        class Test: function {}

        // User-defined (allowed both, syntactically and semantically)
        class Test: MyBaseClass {}
        class Test: AnotherBaseClass {}

        // Aliased user-defined (allowed both, syntactically and semantically)
        class Test: MyAlias.MyBaseClass {}
        class Test: My.LongAlias.AnotherBaseClass {}

        // syntax extensions (syntactically allowed for classes, semantically not allowed for classes)
        class Test: @extMySyntaxExtension {}
        class Test: @extMyAnotherSyntaxExtension {}


    }
}