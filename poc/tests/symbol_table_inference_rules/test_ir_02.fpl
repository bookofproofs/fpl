TestNamespace
{
    inference
    {
        ModusPonens()
        {
            p,q: pred

            premise:
                and (p, impl (p,q) )
            conclusion:
                q
        }

        ModusTollens()
        {
            p,q: pred

            premise:
                and (not(q), impl(p,q) )
            conclusion:
                not (p)
        }
    }
    theory
    {
    }
}
##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.ModusPonens[]', id='ModusPonens[]', reference=AuxSTRuleOfInference())
│   └── AuxSTGlobal(gid='TestNamespace.ModusTollens[]', id='ModusTollens[]', reference=AuxSTRuleOfInference())
└── AuxSTTheory(checksum='23e9eb2d5f284479c37175580807c3d4', file_name='test_ir_02.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    │   ├── AuxSTRuleOfInference(id='ModusPonens[]', outline='inferenceRule', zfrom='5:9:45', zto='13:9:200')
    │   │   ├── AuxSTSignature(outline='signature', zfrom='5:9:45', zto='5:21:57')
    │   │   ├── AuxSTVarSpecList(outline='specificationList')
    │   │   │   ├── AuxSTVarDec(id='p', outline='var_decl', zfrom='7:13:81', zto='7:21:89')
    │   │   │   │   └── AuxSTType(id='pred', outline='type', type_mod=None, type_pattern=18, zfrom='7:17:85', zto='7:21:89')
    │   │   │   └── AuxSTVarDec(id='q', outline='var_decl', zfrom='7:13:81', zto='7:21:89')
    │   │   │       └── AuxSTType(id='pred', outline='type', type_mod=None, type_pattern=18, zfrom='7:17:85', zto='7:21:89')
    │   │   ├── AuxSTPredicate(outline='pre', zfrom='9:13:104', zto='11:12:161')
    │   │   │   └── AuxSTPredicate(outline='and', zfrom='10:17:129', zto='10:36:148')
    │   │   │       ├── AuxSTVariable(id='p', outline='var', zfrom='10:22:134', zto='10:22:134')
    │   │   │       └── AuxSTPredicate(outline='=>', zfrom='10:25:137', zto='10:34:146')
    │   │   │           ├── AuxSTVariable(id='p', outline='var', zfrom='10:31:143', zto='10:31:143')
    │   │   │           └── AuxSTVariable(id='q', outline='var', zfrom='10:33:145', zto='10:33:145')
    │   │   └── AuxSTPredicate(outline='con', zfrom='11:13:162', zto='12:17:190')
    │   │       └── AuxSTVariable(id='q', outline='var', zfrom='12:17:190', zto='12:17:190')
    │   └── AuxSTRuleOfInference(id='ModusTollens[]', outline='inferenceRule', zfrom='15:9:211', zto='23:9:377')
    │       ├── AuxSTSignature(outline='signature', zfrom='15:9:211', zto='15:22:224')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   ├── AuxSTVarDec(id='p', outline='var_decl', zfrom='17:13:248', zto='17:21:256')
    │       │   │   └── AuxSTType(id='pred', outline='type', type_mod=None, type_pattern=18, zfrom='17:17:252', zto='17:21:256')
    │       │   └── AuxSTVarDec(id='q', outline='var_decl', zfrom='17:13:248', zto='17:21:256')
    │       │       └── AuxSTType(id='pred', outline='type', type_mod=None, type_pattern=18, zfrom='17:17:252', zto='17:21:256')
    │       ├── AuxSTPredicate(outline='pre', zfrom='19:13:271', zto='21:12:332')
    │       │   └── AuxSTPredicate(outline='and', zfrom='20:17:296', zto='20:40:319')
    │       │       ├── AuxSTPredicate(outline='not', zfrom='20:22:301', zto='20:27:306')
    │       │       │   └── AuxSTVariable(id='q', outline='var', zfrom='20:26:305', zto='20:26:305')
    │       │       └── AuxSTPredicate(outline='=>', zfrom='20:30:309', zto='20:38:317')
    │       │           ├── AuxSTVariable(id='p', outline='var', zfrom='20:35:314', zto='20:35:314')
    │       │           └── AuxSTVariable(id='q', outline='var', zfrom='20:37:316', zto='20:37:316')
    │       └── AuxSTPredicate(outline='con', zfrom='21:13:333', zto='22:23:367')
    │           └── AuxSTPredicate(outline='not', zfrom='22:17:361', zto='22:23:367')
    │               └── AuxSTVariable(id='p', outline='var', zfrom='22:22:366', zto='22:22:366')
    ├── AuxSTOutline(outline='definitions')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
