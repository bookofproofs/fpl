TestNamespace
{
    theory
    {
        axiom ZeroIsNat()
        {
            is(Zero,Nat)
        }

        axiom ZeroIsNotSuccessor()
        {
            n: Nat
            all n
            (
                NotEquals(Zero(), Succ(n))
            )
        }

    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.ZeroIsNat[]', id='ZeroIsNat[]', reference=AuxSTAxiom(), theory=AuxSTTheory())
│   └── AuxSTGlobal(gid='TestNamespace.ZeroIsNotSuccessor[]', id='ZeroIsNotSuccessor[]', reference=AuxSTAxiom(), theory=AuxSTTheory())
└── AuxSTTheory(checksum='54ed38305139b195df3a1cce8a3c340b', file_name='test_axiom_02.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    │   ├── AuxSTAxiom(id='ZeroIsNat[]', keyword='axiom', outline='axiom', zfrom='5.9', zto='8.9')
    │   │   ├── AuxSTSignature(outline='signature', zfrom='5.15', zto='5.25')
    │   │   ├── AuxSTVarSpecList(outline='specificationList')
    │   │   └── AuxSTStatement(outline='statement', type='is', zfrom='7.13', zto='7.24')
    │   │       ├── AuxSTPredicate(id='Zero', outline='id', zfrom='7.15', zto='7.19')
    │   │       └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='7.20', zto='7.23')
    │   └── AuxSTAxiom(id='ZeroIsNotSuccessor[]', keyword='axiom', outline='axiom', zfrom='10.9', zto='17.9')
    │       ├── AuxSTSignature(outline='signature', zfrom='10.15', zto='10.34')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   └── AuxSTVarDec(id='n', outline='var_decl', zfrom='12.12', zto='12.18')
    │       │       └── AuxSTType(id='Nat', outline='type', type_mod=None, type_pattern=1, zfrom='12.15', zto='12.18')
    │       └── AuxSTPredicate(bound_vars=['n'], outline='all', zfrom='13.13', zto='16.13')
    │           └── AuxSTPredicateWithArgs(id='NotEquals', outline='predicateWithArgs', reference=None, zfrom='15.16', zto='15.42')
    │               └── AuxSTArgs(outline='arguments', zfrom='15.26', zto='15.42')
    │                   ├── AuxSTPredicateWithArgs(id='Zero', outline='predicateWithArgs', reference=None, zfrom='15.26', zto='15.32')
    │                   │   └── AuxSTArgs(outline='arguments', zfrom='15.31', zto='15.32')
    │                   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='15.34', zto='15.41')
    │                       └── AuxSTArgs(outline='arguments', zfrom='15.39', zto='15.41')
    │                           └── AuxSTVariable(id='n', outline='var', zfrom='15.39', zto='15.40')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
