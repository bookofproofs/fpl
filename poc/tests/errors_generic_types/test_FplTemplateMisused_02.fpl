TestAxiom
{
    theory
    {
        class AlgebraicStructure: obj
        {

            myCarrierSet: tplSet
            myOps: +Composition(myElem: *tplSetElem)

            AlgebraicStructure(x: tplSet, ops: +Composition(elem: *tplSetElem))
            {

                a: obj
                myOps := ops
                myCarrierSet := x

                // Assert that all types used in the declaration of AlgebraicStructure
                // can be treated like they were sets, even if they are not derived from the type "Set" in their original
                // definition! This, means that the In predicate has a non-transitive model
                // this is comparable to implementing an interface (or comparable to multiple inheritance).
                // The interpreter only asserts the types tplSet, and tplSetElement to be sets
                assert
                    and
                    (
                        is(tplSet,Set),
                        is(tplSetElem,Set)
                    )

                assert
                    all a
                    (
                        impl ( is(a,tplSetElem), In(a,myCarrierSet) )
                    )
            }
        }

    }
}

##############################
FplTemplateMisused:27:27: The generic type 'tplSetElem' cannot be used in this context