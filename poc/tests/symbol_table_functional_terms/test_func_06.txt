TestNamespace
{
    theory
    {
        func Exp(x: Real) -> Real
        {
            mandatory func Approximation() -> Real
            {
                return x
            }

            mandatory func Approximation1(x:Nat) -> Real
            {
                return x
            }
        }
    }
}

##############################

AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.Exp[1:Real]', id='Exp[1:Real]', reference=AuxSTDefinitionFunctionalTerm())
│   ├── AuxSTGlobal(gid='TestNamespace.Exp[1:Real].Approximation[]', id='Exp[1:Real].Approximation[]', reference=AuxSTFunctionalTermInstance())
│   └── AuxSTGlobal(gid='TestNamespace.Exp[1:Real].Approximation1[1:Nat]', id='Exp[1:Real].Approximation1[1:Nat]', reference=AuxSTFunctionalTermInstance())
├── AuxSTTheory(namespace='TestNamespace', outline='theory', theory_name='test_func_06')
│   ├── AuxSTOutline(outline='uses')
│   ├── AuxSTOutline(outline='axioms')
│   ├── AuxSTOutline(outline='inferenceRules')
│   ├── AuxSTOutline(outline='definitions')
│   │   └── AuxSTDefinitionFunctionalTerm(def_type='functionalTerm', id='Exp[1:Real]', info=AuxAstInfo(), outline='definition')
│   │       ├── AuxSTSignature(info=AuxAstInfo(), outline='signature')
│   │       │   └── AuxSTVarDec(id='x', info=AuxAstInfo(), outline='var_dec', type='Real', type_mod=None, type_pattern=1)
│   │       ├── AuxSTType(id='Real', info=AuxAstInfo(), outline='type', type_mod=None, type_pattern=1)
│   │       ├── AuxSTVarSpecList(outline='specificationList')
│   │       └── AuxSTProperties(outline='properties')
│   │           ├── AuxSTFunctionalTermInstance(def_type='functionalTerm', id='Approximation[]', info=AuxAstInfo(), outline='property')
│   │           │   ├── AuxSTSignature(info=AuxAstInfo(), outline='signature')
│   │           │   ├── AuxSTType(id='Real', info=AuxAstInfo(), outline='type', type_mod=None, type_pattern=1)
│   │           │   └── AuxSTVarSpecList(outline='specificationList')
│   │           │       └── AuxSTStatement(info=AuxAstInfo(), outline='statement', type='return')
│   │           │           └── AuxSTVariable(id='x', info=AuxAstInfo(), outline='var')
│   │           └── AuxSTFunctionalTermInstance(def_type='functionalTerm', id='Approximation1[1:Nat]', info=AuxAstInfo(), outline='property')
│   │               ├── AuxSTSignature(info=AuxAstInfo(), outline='signature')
│   │               │   └── AuxSTVarDec(id='x', info=AuxAstInfo(), outline='var_dec', type='Nat', type_mod=None, type_pattern=1)
│   │               ├── AuxSTType(id='Real', info=AuxAstInfo(), outline='type', type_mod=None, type_pattern=1)
│   │               └── AuxSTVarSpecList(outline='specificationList')
│   │                   └── AuxSTStatement(info=AuxAstInfo(), outline='statement', type='return')
│   │                       └── AuxSTVariable(id='x', info=AuxAstInfo(), outline='var')
│   ├── AuxSTOutline(outline='theorems')
│   ├── AuxSTOutline(outline='lemmas')
│   ├── AuxSTOutline(outline='propositions')
│   ├── AuxSTOutline(outline='conjectures')
│   ├── AuxSTOutline(outline='corollaries')
│   └── AuxSTOutline(outline='proofs')
└── AuxSTLocalizations(outline='localizations')