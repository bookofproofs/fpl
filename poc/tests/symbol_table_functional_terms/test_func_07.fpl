TestNamespace
{
    theory
    {
        func Exp(x: SetReal) -> SetReal
        {

            mandatory pred IsContinuous()
            {
                true
            }
        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.Exp[1:SetReal]', id='Exp[1:SetReal]', reference=AuxSTDefinitionFunctionalTerm())
│   └── AuxSTGlobal(gid='TestNamespace.Exp[1:SetReal].IsContinuous[]', id='Exp[1:SetReal].IsContinuous[]', reference=AuxSTPredicateInstance())
└── AuxSTTheory(checksum='ed8b4a5d3a8182e59fdf4060095dbc28', file_name='test_func_07.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTDefinitionFunctionalTerm(def_type='functionalTerm', id='Exp[1:SetReal]', outline='definition', zfrom='5.9', zto='12.9')
    │       ├── AuxSTSignature(outline='signature', zfrom='5.14', zto='5.28')
    │       │   └── AuxSTVarDec(id='x', outline='var_decl', zfrom='5.17', zto='5.27')
    │       │       └── AuxSTType(id='SetReal', outline='type', type_mod=None, type_pattern=1, zfrom='5.20', zto='5.27')
    │       ├── AuxSTType(id='SetReal', outline='type', type_mod=None, type_pattern=1, zfrom='5.32', zto='5.39')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       └── AuxSTProperties(outline='properties')
    │           └── AuxSTPredicateInstance(def_type='predicateInstance', id='IsContinuous[]', keyword='pred', mandatory=True, outline='property', zfrom='8.13', zto='11.13')
    │               ├── AuxSTSignature(outline='signature', zfrom='8.28', zto='8.41')
    │               ├── AuxSTVarSpecList(outline='specificationList')
    │               └── AuxSTPredicate(outline='true', zfrom='10.17', zto='10.20')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
