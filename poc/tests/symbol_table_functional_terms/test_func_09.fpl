Fpl.Algebra.Structures
{
    uses Fpl.Commons

    theory
    {

        func BinOp(x,y: tplSetElem) -> tplSetElem
        {
            optional pred IsAssociative()
            {
                a,b,c: tplSetElem
                all a,b,c
                (
                    Equals
                    (
                        @self(a,@self(b,c)),
                        @self(@self(a,b),c)
                    )
                )
            }
        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='Fpl.Algebra.Structures.BinOp[2:tplSetElem]', id='BinOp[2:tplSetElem]', reference=AuxSTDefinitionFunctionalTerm())
│   └── AuxSTGlobal(gid='Fpl.Algebra.Structures.BinOp[2:tplSetElem].IsAssociative[]', id='BinOp[2:tplSetElem].IsAssociative[]', reference=AuxSTPredicateInstance())
└── AuxSTTheory(checksum='f72777357828c51d0f3666ca3fc3cdc0', file_name='test_func_09.fpl', namespace='Fpl.Algebra.Structures', outline='theory')
    ├── AuxSTOutline(outline='uses')
    │   └── AuxSTUsedTheory(id='Fpl.Commons', modifier=None, outline='used', zfrom='3.10', zto='3.20')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTDefinitionFunctionalTerm(def_type='functionalTerm', id='BinOp[2:tplSetElem]', outline='definition', zfrom='8.9', zto='22.9')
    │       ├── AuxSTSignature(outline='signature', zfrom='8.14', zto='8.35')
    │       │   ├── AuxSTVarDec(id='x', outline='var_decl', zfrom='8.19', zto='8.34')
    │       │   │   └── AuxSTType(id='tplSetElem', outline='type', type_mod=None, type_pattern=9, zfrom='8.24', zto='8.34')
    │       │   └── AuxSTVarDec(id='y', outline='var_decl', zfrom='8.19', zto='8.34')
    │       │       └── AuxSTType(id='tplSetElem', outline='type', type_mod=None, type_pattern=9, zfrom='8.24', zto='8.34')
    │       ├── AuxSTType(id='tplSetElem', outline='type', type_mod=None, type_pattern=9, zfrom='8.39', zto='8.49')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       └── AuxSTProperties(outline='properties')
    │           └── AuxSTPredicateInstance(def_type='predicateInstance', id='IsAssociative[]', keyword='pred', mandatory=False, outline='property', zfrom='10.13', zto='21.13')
    │               ├── AuxSTSignature(outline='signature', zfrom='10.27', zto='10.41')
    │               ├── AuxSTVarSpecList(outline='specificationList')
    │               │   ├── AuxSTVarDec(id='a', outline='var_decl', zfrom='12.16', zto='12.33')
    │               │   │   └── AuxSTType(id='tplSetElem', outline='type', type_mod=None, type_pattern=9, zfrom='12.23', zto='12.33')
    │               │   ├── AuxSTVarDec(id='b', outline='var_decl', zfrom='12.16', zto='12.33')
    │               │   │   └── AuxSTType(id='tplSetElem', outline='type', type_mod=None, type_pattern=9, zfrom='12.23', zto='12.33')
    │               │   └── AuxSTVarDec(id='c', outline='var_decl', zfrom='12.16', zto='12.33')
    │               │       └── AuxSTType(id='tplSetElem', outline='type', type_mod=None, type_pattern=9, zfrom='12.23', zto='12.33')
    │               └── AuxSTPredicate(bound_vars=['a', 'b', 'c'], outline='all', zfrom='13.17', zto='20.17')
    │                   └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='15.21', zto='19.21')
    │                       └── AuxSTArgs(outline='arguments', zfrom='16.21', zto='19.21')
    │                           ├── AuxSTSelf(id='self', number_ats=1, outline='self', reference=None, zfrom='17.25', zto='17.43')
    │                           │   └── AuxSTArgs(outline='arguments', zfrom='17.30', zto='17.43')
    │                           │       ├── AuxSTVariable(id='a', outline='var', zfrom='17.30', zto='17.31')
    │                           │       └── AuxSTSelf(id='self', number_ats=1, outline='self', reference=None, zfrom='17.33', zto='17.42')
    │                           │           └── AuxSTArgs(outline='arguments', zfrom='17.38', zto='17.42')
    │                           │               ├── AuxSTVariable(id='b', outline='var', zfrom='17.38', zto='17.39')
    │                           │               └── AuxSTVariable(id='c', outline='var', zfrom='17.40', zto='17.41')
    │                           └── AuxSTSelf(id='self', number_ats=1, outline='self', reference=None, zfrom='18.25', zto='18.43')
    │                               └── AuxSTArgs(outline='arguments', zfrom='18.30', zto='18.43')
    │                                   ├── AuxSTSelf(id='self', number_ats=1, outline='self', reference=None, zfrom='18.31', zto='18.40')
    │                                   │   └── AuxSTArgs(outline='arguments', zfrom='18.36', zto='18.40')
    │                                   │       ├── AuxSTVariable(id='a', outline='var', zfrom='18.36', zto='18.37')
    │                                   │       └── AuxSTVariable(id='b', outline='var', zfrom='18.38', zto='18.39')
    │                                   └── AuxSTVariable(id='c', outline='var', zfrom='18.41', zto='18.42')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')
