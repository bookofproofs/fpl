TestNamespace
{
    theory
    {
        func Exp(x: SetReal) -> SetReal
        {

            mandatory pred IsContinuous()
            {
                true
            }

            mandatory pred IsIntegrable()
            {
                true
            }

        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.Exp[1:SetReal]', id='Exp[1:SetReal]', reference=AuxSTDefinitionFunctionalTerm())
│   ├── AuxSTGlobal(gid='TestNamespace.Exp[1:SetReal].IsContinuous[]', id='Exp[1:SetReal].IsContinuous[]', reference=AuxSTPredicateInstance())
│   └── AuxSTGlobal(gid='TestNamespace.Exp[1:SetReal].IsIntegrable[]', id='Exp[1:SetReal].IsIntegrable[]', reference=AuxSTPredicateInstance())
└── AuxSTTheory(checksum='8fa21e96d7b590db99343b56a4d11e2c', file_name='test_func_08.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    │   └── AuxSTDefinitionFunctionalTerm(def_type='functionalTerm', id='Exp[1:SetReal]', outline='definition', zfrom='5:9:42', zto='18:9:277')
    │       ├── AuxSTSignature(outline='signature', zfrom='5:14:47', zto='5:28:61')
    │       │   └── AuxSTVarDec(id='x', outline='var_decl', zfrom='5:18:51', zto='5:27:60')
    │       │       └── AuxSTType(id='SetReal', outline='type', type_mod=None, type_pattern=1, zfrom='5:20:53', zto='5:27:60')
    │       ├── AuxSTType(id='SetReal', outline='type', type_mod=None, type_pattern=1, zfrom='5:32:65', zto='5:39:72')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       └── AuxSTProperties(outline='properties')
    │           ├── AuxSTPredicateInstance(def_type='predicateInstance', id='IsContinuous[]', keyword='pred', mandatory=True, outline='property', zfrom='8:13:97', zto='11:13:174')
    │           │   ├── AuxSTSignature(outline='signature', zfrom='8:28:112', zto='8:41:125')
    │           │   ├── AuxSTVarSpecList(outline='specificationList')
    │           │   └── AuxSTPredicate(outline='true', zfrom='10:17:157', zto='10:20:160')
    │           └── AuxSTPredicateInstance(def_type='predicateInstance', id='IsIntegrable[]', keyword='pred', mandatory=True, outline='property', zfrom='13:13:189', zto='16:13:266')
    │               ├── AuxSTSignature(outline='signature', zfrom='13:28:204', zto='13:41:217')
    │               ├── AuxSTVarSpecList(outline='specificationList')
    │               └── AuxSTPredicate(outline='true', zfrom='15:17:249', zto='15:20:252')
    ├── AuxSTOutline(outline='theorems')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')