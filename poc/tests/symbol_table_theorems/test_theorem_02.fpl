TestNamespace
{
    theory
    {
        theorem AddIsUnique(op: Add)
        {
            n,m: Nat
            anotherAdd: Add
            pre:
                and
                    (
                        Equals(Add(n,0),n),
                        Equals(anotherAdd(n,0),n),
                        Equals(Add(n,Succ(m)), Succ(Add(n,m))),
                        Equals(anotherAdd(n,Succ(m)), Succ(anotherAdd(n,m)))
                    )
            con:
                all n
                (
                    all m
                    (
                        Equals(Add(n,m), anotherAdd(n,m))
                    )
                )
        }

        thm SumOfConsecutiveNumbers()
        {
            n, limit: Nat
            f: Addend
            premise:
                loop n [Nat(1)~limit]
                (
                    assert Equals(f(n),n)
                )
            conclusion:
                all n
                (
                    Equals(Sum(1,n,f),Div(Mul(n,Succ(n)),2))
                )

        }
    }
}

##############################
AnyNode(outline='root')
├── AnyNode(outline='globals')
│   ├── AuxSTGlobal(gid='TestNamespace.AddIsUnique[1:Add]', id='AddIsUnique[1:Add]', reference=AuxSTTheorem())
│   └── AuxSTGlobal(gid='TestNamespace.SumOfConsecutiveNumbers[]', id='SumOfConsecutiveNumbers[]', reference=AuxSTTheorem())
└── AuxSTTheory(checksum='7d6a6055f2f44be4888ea4bebaf38851', file_name='test_theorem_02.fpl', namespace='TestNamespace', outline='theory')
    ├── AuxSTOutline(outline='uses')
    ├── AuxSTOutline(outline='axioms')
    ├── AuxSTOutline(outline='inferenceRules')
    ├── AuxSTOutline(outline='definitions')
    ├── AuxSTOutline(outline='theorems')
    │   ├── AuxSTTheorem(id='AddIsUnique[1:Add]', keyword='theorem', outline='theorem', zfrom='5:8:41', zto='25:9:658')
    │   │   ├── AuxSTSignature(outline='signature', zfrom='5:17:50', zto='5:36:69')
    │   │   │   └── AuxSTVarDec(id='op', outline='var_decl', type='Add', type_mod=None, type_pattern=1, zfrom='5:28:61', zto='5:35:68')
    │   │   ├── AuxSTVarSpecList(outline='specificationList')
    │   │   │   ├── AuxSTVarDec(id='n', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='7:12:92', zto='7:20:100')
    │   │   │   ├── AuxSTVarDec(id='m', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='7:12:92', zto='7:20:100')
    │   │   │   └── AuxSTVarDec(id='anotherAdd', outline='var_decl', type='Add', type_mod=None, type_pattern=1, zfrom='8:12:113', zto='8:27:128')
    │   │   ├── AuxSTPredicate(outline='pre', zfrom='9:12:141', zto='16:21:445')
    │   │   │   └── AuxSTPredicate(outline='and', zfrom='10:16:162', zto='16:21:445')
    │   │   │       ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='12:24:212', zto='12:42:230')
    │   │   │       │   ├── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='12:31:219', zto='12:39:227')
    │   │   │       │   │   ├── AuxSTVariable(id='n', outline='var', zfrom='12:35:223', zto='12:36:224')
    │   │   │       │   │   └── AuxSTPredicate(id='0', outline='extDigit', zfrom='12:37:225', zto='12:38:226')
    │   │   │       │   └── AuxSTVariable(id='n', outline='var', zfrom='12:40:228', zto='12:41:229')
    │   │   │       ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='13:24:256', zto='13:49:281')
    │   │   │       │   ├── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='13:41:273', zto='13:46:278')
    │   │   │       │   │   ├── AuxSTVariable(id='n', outline='var', zfrom='13:42:274', zto='13:43:275')
    │   │   │       │   │   └── AuxSTPredicate(id='0', outline='extDigit', zfrom='13:44:276', zto='13:45:277')
    │   │   │       │   └── AuxSTVariable(id='n', outline='var', zfrom='13:47:279', zto='13:48:280')
    │   │   │       ├── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='14:24:307', zto='14:62:345')
    │   │   │       │   ├── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='14:31:314', zto='14:45:328')
    │   │   │       │   │   ├── AuxSTVariable(id='n', outline='var', zfrom='14:35:318', zto='14:36:319')
    │   │   │       │   │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='14:37:320', zto='14:44:327')
    │   │   │       │   │       └── AuxSTVariable(id='m', outline='var', zfrom='14:42:325', zto='14:43:326')
    │   │   │       │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='14:47:330', zto='14:61:344')
    │   │   │       │       └── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='14:52:335', zto='14:60:343')
    │   │   │       │           ├── AuxSTVariable(id='n', outline='var', zfrom='14:56:339', zto='14:57:340')
    │   │   │       │           └── AuxSTVariable(id='m', outline='var', zfrom='14:58:341', zto='14:59:342')
    │   │   │       └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='15:24:371', zto='15:76:423')
    │   │   │           ├── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='15:41:388', zto='15:52:399')
    │   │   │           │   ├── AuxSTVariable(id='n', outline='var', zfrom='15:42:389', zto='15:43:390')
    │   │   │           │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='15:44:391', zto='15:51:398')
    │   │   │           │       └── AuxSTVariable(id='m', outline='var', zfrom='15:49:396', zto='15:50:397')
    │   │   │           └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='15:54:401', zto='15:75:422')
    │   │   │               └── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='15:69:416', zto='15:74:421')
    │   │   │                   ├── AuxSTVariable(id='n', outline='var', zfrom='15:70:417', zto='15:71:418')
    │   │   │                   └── AuxSTVariable(id='m', outline='var', zfrom='15:72:419', zto='15:73:420')
    │   │   ├── AuxSTPredicate(outline='con', zfrom='17:12:458', zto='24:17:648')
    │   │   │   └── AuxSTPredicate(bound_vars=['n'], outline='all', zfrom='20:17:520', zto='24:17:648')
    │   │   │       └── AuxSTPredicate(bound_vars=['m'], outline='all', zfrom='20:20:523', zto='23:21:630')
    │   │   │           └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='22:24:575', zto='22:57:608')
    │   │   │               ├── AuxSTPredicateWithArgs(id='Add', outline='predicateWithArgs', reference=None, zfrom='22:31:582', zto='22:39:590')
    │   │   │               │   ├── AuxSTVariable(id='n', outline='var', zfrom='22:35:586', zto='22:36:587')
    │   │   │               │   └── AuxSTVariable(id='m', outline='var', zfrom='22:37:588', zto='22:38:589')
    │   │   │               └── AuxSTPredicateWithArgs(id='anotherAdd', outline='predicateWithArgs', reference=None, zfrom='22:51:602', zto='22:56:607')
    │   │   │                   ├── AuxSTVariable(id='n', outline='var', zfrom='22:52:603', zto='22:53:604')
    │   │   │                   └── AuxSTVariable(id='m', outline='var', zfrom='22:54:605', zto='22:55:606')
    │   │   ├── AuxSTOutline(outline='corollaries')
    │   │   └── AuxSTOutline(outline='proofs')
    │   └── AuxSTTheorem(id='SumOfConsecutiveNumbers[]', keyword='thm', outline='theorem', zfrom='27:8:668', zto='42:9:1046')
    │       ├── AuxSTSignature(outline='signature', zfrom='27:13:673', zto='27:37:697')
    │       ├── AuxSTVarSpecList(outline='specificationList')
    │       │   ├── AuxSTVarDec(id='n', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='29:12:720', zto='29:25:733')
    │       │   ├── AuxSTVarDec(id='limit', outline='var_decl', type='Nat', type_mod=None, type_pattern=1, zfrom='29:12:720', zto='29:25:733')
    │       │   └── AuxSTVarDec(id='f', outline='var_decl', type='Addend', type_mod=None, type_pattern=1, zfrom='30:12:746', zto='30:21:755')
    │       ├── AuxSTPredicate(outline='pre', zfrom='31:12:768', zto='35:17:892')
    │       │   └── AuxSTStatement(outline='statement', type='loop', zfrom='32:16:793', zto='35:17:892')
    │       │       ├── AuxSTVariable(id='n', outline='var', zfrom='32:21:798', zto='32:22:799')
    │       │       ├── AuxSTRange(left_included=True, outline='range', right_included=True, zfrom='', zto='')
    │       │       │   ├── AuxSTPredicateWithArgs(id='Nat', outline='predicateWithArgs', reference=None, zfrom='32:21:798', zto='32:30:807')
    │       │       │   │   └── AuxSTPredicate(id='1', outline='extDigit', zfrom='32:28:805', zto='32:29:806')
    │       │       │   └── AuxSTVariable(id='limit', outline='var', zfrom='32:31:808', zto='32:36:813')
    │       │       └── AuxSTStatement(outline='statement', type='assert', zfrom='34:20:853', zto='34:41:874')
    │       │           └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='34:27:860', zto='34:41:874')
    │       │               ├── AuxSTPredicateWithArgs(id='f', outline='predicateWithArgs', reference=None, zfrom='34:35:868', zto='34:38:871')
    │       │               │   └── AuxSTVariable(id='n', outline='var', zfrom='34:36:869', zto='34:37:870')
    │       │               └── AuxSTVariable(id='n', outline='var', zfrom='34:39:872', zto='34:40:873')
    │       ├── AuxSTPredicate(outline='con', zfrom='36:12:905', zto='40:17:1035')
    │       │   └── AuxSTPredicate(bound_vars=['n'], outline='all', zfrom='37:16:933', zto='40:17:1035')
    │       │       └── AuxSTPredicateWithArgs(id='Equals', outline='predicateWithArgs', reference=None, zfrom='39:20:977', zto='39:60:1017')
    │       │           ├── AuxSTPredicateWithArgs(id='Sum', outline='predicateWithArgs', reference=None, zfrom='39:27:984', zto='39:37:994')
    │       │           │   ├── AuxSTPredicate(id='1', outline='extDigit', zfrom='39:31:988', zto='39:32:989')
    │       │           │   ├── AuxSTVariable(id='n', outline='var', zfrom='39:33:990', zto='39:34:991')
    │       │           │   └── AuxSTVariable(id='f', outline='var', zfrom='39:35:992', zto='39:36:993')
    │       │           └── AuxSTPredicateWithArgs(id='Div', outline='predicateWithArgs', reference=None, zfrom='39:38:995', zto='39:59:1016')
    │       │               ├── AuxSTPredicateWithArgs(id='Mul', outline='predicateWithArgs', reference=None, zfrom='39:42:999', zto='39:56:1013')
    │       │               │   ├── AuxSTVariable(id='n', outline='var', zfrom='39:46:1003', zto='39:47:1004')
    │       │               │   └── AuxSTPredicateWithArgs(id='Succ', outline='predicateWithArgs', reference=None, zfrom='39:48:1005', zto='39:55:1012')
    │       │               │       └── AuxSTVariable(id='n', outline='var', zfrom='39:53:1010', zto='39:54:1011')
    │       │               └── AuxSTPredicate(id='2', outline='extDigit', zfrom='39:57:1014', zto='39:58:1015')
    │       ├── AuxSTOutline(outline='corollaries')
    │       └── AuxSTOutline(outline='proofs')
    ├── AuxSTOutline(outline='lemmas')
    ├── AuxSTOutline(outline='propositions')
    ├── AuxSTOutline(outline='conjectures')
    ├── AuxSTOutline(outline='corollaries')
    ├── AuxSTOutline(outline='proofs')
    └── AuxSTLocalizations(outline='localizations')